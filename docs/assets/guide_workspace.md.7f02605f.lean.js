import{_ as o}from"./chunks/NonProjectOption.49522824.js";import{_ as p,j as e,k as l,C as s,p as n,L as t,V as c}from"./chunks/framework.cf42e605.js";const w=JSON.parse('{"title":"Workspace","description":"","frontmatter":{},"headers":[],"relativePath":"guide/workspace.md","filePath":"guide/workspace.md","lastUpdated":1681326467000}'),r={name:"guide/workspace.md"},i=c("",24),y={class:"tip custom-block"},d=s("p",{class:"custom-block-title"},"TIP",-1),f=s("a",{href:"/config/"},'"Config"',-1),A=s("h2",{id:"coverage",tabindex:"-1"},[n("Coverage "),s("a",{class:"header-anchor",href:"#coverage","aria-label":'Permalink to "Coverage"'},"â€‹")],-1),v=s("p",null,[n("Coverage for workspace projects works out of the box. But if you have "),s("a",{href:"/config/#coverage-all"},[s("code",null,"all")]),n(" option enabled and use non-conventional extensions in some of your projects, you will need to have a plugin that handles this extension in your root configuration file.")],-1),D=s("p",null,"For example, if you have a package that uses Vue files and it has its own config file, but some of the files are not imported in your tests, coverage will fail trying to analyze the usage of unused files, because it relies on the root configuration rather than project configuration.",-1);function u(h,g,B,C,m,k){const a=o;return e(),l("div",null,[i,s("div",y,[d,s("p",null,[n("All configuration options that are not supported inside a project config have "),t(a),n(" sign next them in "),f,n(" page.")])]),A,v,D])}const j=p(r,[["render",u]]);export{w as __pageData,j as default};
