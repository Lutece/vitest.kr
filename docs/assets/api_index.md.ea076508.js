import{_ as s,j as n,k as a,V as l}from"./chunks/framework.8939a477.js";const d=JSON.parse('{"title":"Test API Reference","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"api/index.md","filePath":"api/index.md","lastUpdated":1690470465000}'),p={name:"api/index.md"},o=l(`<h1 id="test-api-reference" tabindex="-1">Test API Reference <a class="header-anchor" href="#test-api-reference" aria-label="Permalink to &quot;Test API Reference&quot;">​</a></h1><p>The following types are used in the type signatures below</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">type</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">Awaitable</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">T</span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">T</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">|</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">PromiseLike</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">T</span><span style="color:#666666;">&gt;</span></span>
<span class="line"><span style="color:#CB7676;">type</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">TestFunction</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">Awaitable</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">void</span><span style="color:#666666;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">interface</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">TestOptions</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#758575DD;">/**</span></span>
<span class="line"><span style="color:#758575DD;">   * Will fail the test if it takes too long to execute</span></span>
<span class="line"><span style="color:#758575DD;">   */</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">timeout</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: </span><span style="color:#5DA994;">number</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#758575DD;">/**</span></span>
<span class="line"><span style="color:#758575DD;">   * Will retry the test specific number of times if it fails</span></span>
<span class="line"><span style="color:#758575DD;">   *</span></span>
<span class="line"><span style="color:#758575DD;">   * </span><span style="color:#666666;">@</span><span style="color:#4D9375;">default</span><span style="color:#758575DD;"> </span><span style="color:#BD976A;">0</span></span>
<span class="line"><span style="color:#758575DD;">   */</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">retry</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: </span><span style="color:#5DA994;">number</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#758575DD;">/**</span></span>
<span class="line"><span style="color:#758575DD;">   * Will repeat the same test several times even if it fails each time</span></span>
<span class="line"><span style="color:#758575DD;">   * If you have &quot;retry&quot; option and it fails, it will use every retry in each cycle</span></span>
<span class="line"><span style="color:#758575DD;">   * Useful for debugging random failings</span></span>
<span class="line"><span style="color:#758575DD;">   *</span></span>
<span class="line"><span style="color:#758575DD;">   * </span><span style="color:#666666;">@</span><span style="color:#4D9375;">default</span><span style="color:#758575DD;"> </span><span style="color:#BD976A;">0</span></span>
<span class="line"><span style="color:#758575DD;">   */</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">repeats</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: </span><span style="color:#5DA994;">number</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">type</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">Awaitable</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">T</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">T</span><span style="color:#393A34;"> </span><span style="color:#999999;">|</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">PromiseLike</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">T</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#AB5959;">type</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">TestFunction</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">Awaitable</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">void</span><span style="color:#999999;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">interface</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">TestOptions</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">/**</span></span>
<span class="line"><span style="color:#A0ADA0;">   * Will fail the test if it takes too long to execute</span></span>
<span class="line"><span style="color:#A0ADA0;">   */</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">timeout</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">number</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">/**</span></span>
<span class="line"><span style="color:#A0ADA0;">   * Will retry the test specific number of times if it fails</span></span>
<span class="line"><span style="color:#A0ADA0;">   *</span></span>
<span class="line"><span style="color:#A0ADA0;">   * </span><span style="color:#999999;">@</span><span style="color:#1E754F;">default</span><span style="color:#A0ADA0;"> </span><span style="color:#B07D48;">0</span></span>
<span class="line"><span style="color:#A0ADA0;">   */</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">retry</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">number</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">/**</span></span>
<span class="line"><span style="color:#A0ADA0;">   * Will repeat the same test several times even if it fails each time</span></span>
<span class="line"><span style="color:#A0ADA0;">   * If you have &quot;retry&quot; option and it fails, it will use every retry in each cycle</span></span>
<span class="line"><span style="color:#A0ADA0;">   * Useful for debugging random failings</span></span>
<span class="line"><span style="color:#A0ADA0;">   *</span></span>
<span class="line"><span style="color:#A0ADA0;">   * </span><span style="color:#999999;">@</span><span style="color:#1E754F;">default</span><span style="color:#A0ADA0;"> </span><span style="color:#B07D48;">0</span></span>
<span class="line"><span style="color:#A0ADA0;">   */</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">repeats</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">number</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><p>When a test function returns a promise, the runner will wait until it is resolved to collect async expectations. If the promise is rejected, the test will fail.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>In Jest, <code>TestFunction</code> can also be of type <code>(done: DoneCallback) =&gt; void</code>. If this form is used, the test will not be concluded until <code>done</code> is called. You can achieve the same using an <code>async</code> function, see the <a href="/vitest.kr/guide/migration.html#done-callback">Migration guide Done Callback section</a>.</p></div><h2 id="test" tabindex="-1">test <a class="header-anchor" href="#test" aria-label="Permalink to &quot;test&quot;">​</a></h2><ul><li><p><strong>Type:</strong> <code>(name: string | Function, fn: TestFunction, timeout?: number | TestOptions) =&gt; void</code></p></li><li><p><strong>Alias:</strong> <code>it</code></p><p><code>test</code> defines a set of related expectations. It receives the test name and a function that holds the expectations to test.</p><p>Optionally, you can provide a timeout (in milliseconds) for specifying how long to wait before terminating. The default is 5 seconds, and can be configured globally with <a href="/vitest.kr/config/#testtimeout">testTimeout</a></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expect</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">test</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">test</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">should work as expected</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">expect</span><span style="color:#666666;">(</span><span style="color:#BD976A;">Math</span><span style="color:#666666;">.</span><span style="color:#80A665;">sqrt</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">4</span><span style="color:#666666;">)).</span><span style="color:#80A665;">toBe</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">2</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expect</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">test</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">test</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">should work as expected</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">expect</span><span style="color:#999999;">(</span><span style="color:#B07D48;">Math</span><span style="color:#999999;">.</span><span style="color:#59873A;">sqrt</span><span style="color:#999999;">(</span><span style="color:#2F798A;">4</span><span style="color:#999999;">)).</span><span style="color:#59873A;">toBe</span><span style="color:#999999;">(</span><span style="color:#2F798A;">2</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div></li></ul><h3 id="test-extend" tabindex="-1">test.extend <a class="header-anchor" href="#test-extend" aria-label="Permalink to &quot;test.extend&quot;">​</a></h3><ul><li><p><strong>Type:</strong> <code>&lt;T extends Record&lt;string, any&gt;&gt;(fixtures: Fixtures&lt;T&gt;): TestAPI&lt;ExtraContext &amp; T&gt;</code></p></li><li><p><strong>Alias:</strong> <code>it.extend</code></p></li><li><p><strong>Version:</strong> Vitest 0.32.3</p><p>Use <code>test.extend</code> to extend the test context with custom fixtures. This will return a new <code>test</code> and it&#39;s also extendable, so you can compose more fixtures or override existing ones by extending it as you need. See <a href="/vitest.kr/guide/test-context.html#test-extend">Extend Test Context</a> for more information.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expect</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">test</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">todos</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#666666;">[]</span></span>
<span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">archive</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#666666;">[]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">myTest</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">test</span><span style="color:#666666;">.</span><span style="color:#80A665;">extend</span><span style="color:#666666;">({</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#80A665;">todos</span><span style="color:#666666;">: </span><span style="color:#CB7676;">async</span><span style="color:#666666;"> ({ </span><span style="color:#BD976A;">task</span><span style="color:#666666;"> }, </span><span style="color:#BD976A;">use</span><span style="color:#666666;">) =&gt; {</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#BD976A;">todos</span><span style="color:#666666;">.</span><span style="color:#80A665;">push</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">, </span><span style="color:#4C9A91;">2</span><span style="color:#666666;">, </span><span style="color:#4C9A91;">3</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#4D9375;">await</span><span style="color:#666666;"> </span><span style="color:#80A665;">use</span><span style="color:#666666;">(</span><span style="color:#BD976A;">todos</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#BD976A;">todos</span><span style="color:#666666;">.</span><span style="color:#B8A965;">length</span><span style="color:#666666;"> = </span><span style="color:#4C9A91;">0</span></span>
<span class="line"><span style="color:#666666;">  },</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#BD976A;">archive</span></span>
<span class="line"><span style="color:#666666;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">myTest</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">add item</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">({</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">todos</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">})</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">expect</span><span style="color:#666666;">(</span><span style="color:#BD976A;">todos</span><span style="color:#666666;">.</span><span style="color:#B8A965;">length</span><span style="color:#666666;">).</span><span style="color:#80A665;">toBe</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">3</span><span style="color:#666666;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">todos</span><span style="color:#666666;">.</span><span style="color:#80A665;">push</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">4</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">expect</span><span style="color:#666666;">(</span><span style="color:#BD976A;">todos</span><span style="color:#666666;">.</span><span style="color:#B8A965;">length</span><span style="color:#666666;">).</span><span style="color:#80A665;">toBe</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">4</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expect</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">test</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">todos</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#999999;">[]</span></span>
<span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">archive</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#999999;">[]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">myTest</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">test</span><span style="color:#999999;">.</span><span style="color:#59873A;">extend</span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#59873A;">todos</span><span style="color:#999999;">: </span><span style="color:#AB5959;">async</span><span style="color:#999999;"> ({ </span><span style="color:#B07D48;">task</span><span style="color:#999999;"> }, </span><span style="color:#B07D48;">use</span><span style="color:#999999;">) =&gt; {</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#B07D48;">todos</span><span style="color:#999999;">.</span><span style="color:#59873A;">push</span><span style="color:#999999;">(</span><span style="color:#2F798A;">1</span><span style="color:#999999;">, </span><span style="color:#2F798A;">2</span><span style="color:#999999;">, </span><span style="color:#2F798A;">3</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#1E754F;">await</span><span style="color:#999999;"> </span><span style="color:#59873A;">use</span><span style="color:#999999;">(</span><span style="color:#B07D48;">todos</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#B07D48;">todos</span><span style="color:#999999;">.</span><span style="color:#998418;">length</span><span style="color:#999999;"> = </span><span style="color:#2F798A;">0</span></span>
<span class="line"><span style="color:#999999;">  },</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#B07D48;">archive</span></span>
<span class="line"><span style="color:#999999;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">myTest</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">add item</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">({</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">todos</span><span style="color:#393A34;"> </span><span style="color:#999999;">})</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">expect</span><span style="color:#999999;">(</span><span style="color:#B07D48;">todos</span><span style="color:#999999;">.</span><span style="color:#998418;">length</span><span style="color:#999999;">).</span><span style="color:#59873A;">toBe</span><span style="color:#999999;">(</span><span style="color:#2F798A;">3</span><span style="color:#999999;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">todos</span><span style="color:#999999;">.</span><span style="color:#59873A;">push</span><span style="color:#999999;">(</span><span style="color:#2F798A;">4</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">expect</span><span style="color:#999999;">(</span><span style="color:#B07D48;">todos</span><span style="color:#999999;">.</span><span style="color:#998418;">length</span><span style="color:#999999;">).</span><span style="color:#59873A;">toBe</span><span style="color:#999999;">(</span><span style="color:#2F798A;">4</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div></li></ul><h3 id="test-skip" tabindex="-1">test.skip <a class="header-anchor" href="#test-skip" aria-label="Permalink to &quot;test.skip&quot;">​</a></h3><ul><li><p><strong>Type:</strong> <code>(name: string | Function, fn: TestFunction, timeout?: number | TestOptions) =&gt; void</code></p></li><li><p><strong>Alias:</strong> <code>it.skip</code></p><p>If you want to skip running certain tests, but you don&#39;t want to delete the code due to any reason, you can use <code>test.skip</code> to avoid running them.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">assert</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">test</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD976A;">test</span><span style="color:#666666;">.</span><span style="color:#80A665;">skip</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">skipped test</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// Test skipped, no error</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">assert</span><span style="color:#666666;">.</span><span style="color:#80A665;">equal</span><span style="color:#666666;">(</span><span style="color:#BD976A;">Math</span><span style="color:#666666;">.</span><span style="color:#80A665;">sqrt</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">4</span><span style="color:#666666;">),</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">3</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">assert</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">test</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B07D48;">test</span><span style="color:#999999;">.</span><span style="color:#59873A;">skip</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">skipped test</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// Test skipped, no error</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">assert</span><span style="color:#999999;">.</span><span style="color:#59873A;">equal</span><span style="color:#999999;">(</span><span style="color:#B07D48;">Math</span><span style="color:#999999;">.</span><span style="color:#59873A;">sqrt</span><span style="color:#999999;">(</span><span style="color:#2F798A;">4</span><span style="color:#999999;">),</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">3</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div></li></ul><h3 id="test-skipif" tabindex="-1">test.skipIf <a class="header-anchor" href="#test-skipif" aria-label="Permalink to &quot;test.skipIf&quot;">​</a></h3><ul><li><p><strong>Type:</strong> <code>(condition: any) =&gt; Test</code></p></li><li><p><strong>Alias:</strong> <code>it.skipIf</code></p><p>In some cases you might run tests multiple times with different environments, and some of the tests might be environment-specific. Instead of wrapping the test code with <code>if</code>, you can use <code>test.skipIf</code> to skip the test whenever the condition is truthy.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">assert</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">test</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">isDev</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">process</span><span style="color:#666666;">.</span><span style="color:#BD976A;">env</span><span style="color:#666666;">.</span><span style="color:#BD976A;">NODE_ENV</span><span style="color:#CB7676;"> === </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">development</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD976A;">test</span><span style="color:#666666;">.</span><span style="color:#80A665;">skipIf</span><span style="color:#666666;">(</span><span style="color:#BD976A;">isDev</span><span style="color:#666666;">)(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">prod only test</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// this test only runs in production</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">assert</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">test</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">isDev</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">process</span><span style="color:#999999;">.</span><span style="color:#B07D48;">env</span><span style="color:#999999;">.</span><span style="color:#B07D48;">NODE_ENV</span><span style="color:#AB5959;"> === </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">development</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B07D48;">test</span><span style="color:#999999;">.</span><span style="color:#59873A;">skipIf</span><span style="color:#999999;">(</span><span style="color:#B07D48;">isDev</span><span style="color:#999999;">)(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">prod only test</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// this test only runs in production</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div></li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>You cannot use this syntax, when using Vitest as <a href="/vitest.kr/guide/testing-types.html">type checker</a>.</p></div><h3 id="test-runif" tabindex="-1">test.runIf <a class="header-anchor" href="#test-runif" aria-label="Permalink to &quot;test.runIf&quot;">​</a></h3><ul><li><p><strong>Type:</strong> <code>(condition: any) =&gt; Test</code></p></li><li><p><strong>Alias:</strong> <code>it.runIf</code></p><p>Opposite of <a href="#test-skipif">test.skipIf</a>.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">assert</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">test</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">isDev</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">process</span><span style="color:#666666;">.</span><span style="color:#BD976A;">env</span><span style="color:#666666;">.</span><span style="color:#BD976A;">NODE_ENV</span><span style="color:#CB7676;"> === </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">development</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD976A;">test</span><span style="color:#666666;">.</span><span style="color:#80A665;">runIf</span><span style="color:#666666;">(</span><span style="color:#BD976A;">isDev</span><span style="color:#666666;">)(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">dev only test</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// this test only runs in development</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">assert</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">test</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">isDev</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">process</span><span style="color:#999999;">.</span><span style="color:#B07D48;">env</span><span style="color:#999999;">.</span><span style="color:#B07D48;">NODE_ENV</span><span style="color:#AB5959;"> === </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">development</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B07D48;">test</span><span style="color:#999999;">.</span><span style="color:#59873A;">runIf</span><span style="color:#999999;">(</span><span style="color:#B07D48;">isDev</span><span style="color:#999999;">)(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">dev only test</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// this test only runs in development</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div></li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>You cannot use this syntax, when using Vitest as <a href="/vitest.kr/guide/testing-types.html">type checker</a>.</p></div><h3 id="test-only" tabindex="-1">test.only <a class="header-anchor" href="#test-only" aria-label="Permalink to &quot;test.only&quot;">​</a></h3><ul><li><p><strong>Type:</strong> <code>(name: string | Function, fn: TestFunction, timeout?: number) =&gt; void</code></p></li><li><p><strong>Alias:</strong> <code>it.only</code></p><p>Use <code>test.only</code> to only run certain tests in a given suite. This is useful when debugging.</p><p>Optionally, you can provide a timeout (in milliseconds) for specifying how long to wait before terminating. The default is 5 seconds, and can be configured globally with <a href="/vitest.kr/config/#testtimeout">testTimeout</a>.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">assert</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">test</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD976A;">test</span><span style="color:#666666;">.</span><span style="color:#80A665;">only</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">test</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// Only this test (and others marked with only) are run</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">assert</span><span style="color:#666666;">.</span><span style="color:#80A665;">equal</span><span style="color:#666666;">(</span><span style="color:#BD976A;">Math</span><span style="color:#666666;">.</span><span style="color:#80A665;">sqrt</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">4</span><span style="color:#666666;">),</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">2</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">assert</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">test</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B07D48;">test</span><span style="color:#999999;">.</span><span style="color:#59873A;">only</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">test</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// Only this test (and others marked with only) are run</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">assert</span><span style="color:#999999;">.</span><span style="color:#59873A;">equal</span><span style="color:#999999;">(</span><span style="color:#B07D48;">Math</span><span style="color:#999999;">.</span><span style="color:#59873A;">sqrt</span><span style="color:#999999;">(</span><span style="color:#2F798A;">4</span><span style="color:#999999;">),</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">2</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div><p>Sometimes it is very useful to run <code>only</code> tests in a certain file, ignoring all other tests from the whole test suite, which pollute the output.</p><p>In order to do that run <code>vitest</code> with specific file containing the tests in question.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#dbd7caee;"># vitest interesting.test.ts</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#393a34;"># vitest interesting.test.ts</span></span></code></pre></div></li></ul><h3 id="test-concurrent" tabindex="-1">test.concurrent <a class="header-anchor" href="#test-concurrent" aria-label="Permalink to &quot;test.concurrent&quot;">​</a></h3><ul><li><p><strong>Type:</strong> <code>(name: string | Function, fn: TestFunction, timeout?: number) =&gt; void</code></p></li><li><p><strong>Alias:</strong> <code>it.concurrent</code></p><p><code>test.concurrent</code> marks consecutive tests to be run in parallel. It receives the test name, an async function with the tests to collect, and an optional timeout (in milliseconds).</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">describe</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">test</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// The two tests marked with concurrent will be run in parallel</span></span>
<span class="line"><span style="color:#80A665;">describe</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">suite</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">test</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">serial test</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">/* ... */</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">test</span><span style="color:#666666;">.</span><span style="color:#80A665;">concurrent</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">concurrent test 1</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">/* ... */</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">test</span><span style="color:#666666;">.</span><span style="color:#80A665;">concurrent</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">concurrent test 2</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">/* ... */</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">describe</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">test</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// The two tests marked with concurrent will be run in parallel</span></span>
<span class="line"><span style="color:#59873A;">describe</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">suite</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">test</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">serial test</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">/* ... */</span><span style="color:#393A34;"> </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">test</span><span style="color:#999999;">.</span><span style="color:#59873A;">concurrent</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">concurrent test 1</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">/* ... */</span><span style="color:#393A34;"> </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">test</span><span style="color:#999999;">.</span><span style="color:#59873A;">concurrent</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">concurrent test 2</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">/* ... */</span><span style="color:#393A34;"> </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div><p><code>test.skip</code>, <code>test.only</code>, and <code>test.todo</code> works with concurrent tests. All the following combinations are valid:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#BD976A;">test</span><span style="color:#666666;">.</span><span style="color:#80A665;">concurrent</span><span style="color:#666666;">(</span><span style="color:#758575DD;">/* ... */</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#BD976A;">test</span><span style="color:#666666;">.</span><span style="color:#BD976A;">skip</span><span style="color:#666666;">.</span><span style="color:#80A665;">concurrent</span><span style="color:#666666;">(</span><span style="color:#758575DD;">/* ... */</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// or test.concurrent.skip(/* ... */)</span></span>
<span class="line"><span style="color:#BD976A;">test</span><span style="color:#666666;">.</span><span style="color:#BD976A;">only</span><span style="color:#666666;">.</span><span style="color:#80A665;">concurrent</span><span style="color:#666666;">(</span><span style="color:#758575DD;">/* ... */</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// or test.concurrent.only(/* ... */)</span></span>
<span class="line"><span style="color:#BD976A;">test</span><span style="color:#666666;">.</span><span style="color:#BD976A;">todo</span><span style="color:#666666;">.</span><span style="color:#80A665;">concurrent</span><span style="color:#666666;">(</span><span style="color:#758575DD;">/* ... */</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// or test.concurrent.todo(/* ... */)</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#B07D48;">test</span><span style="color:#999999;">.</span><span style="color:#59873A;">concurrent</span><span style="color:#999999;">(</span><span style="color:#A0ADA0;">/* ... */</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#B07D48;">test</span><span style="color:#999999;">.</span><span style="color:#B07D48;">skip</span><span style="color:#999999;">.</span><span style="color:#59873A;">concurrent</span><span style="color:#999999;">(</span><span style="color:#A0ADA0;">/* ... */</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// or test.concurrent.skip(/* ... */)</span></span>
<span class="line"><span style="color:#B07D48;">test</span><span style="color:#999999;">.</span><span style="color:#B07D48;">only</span><span style="color:#999999;">.</span><span style="color:#59873A;">concurrent</span><span style="color:#999999;">(</span><span style="color:#A0ADA0;">/* ... */</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// or test.concurrent.only(/* ... */)</span></span>
<span class="line"><span style="color:#B07D48;">test</span><span style="color:#999999;">.</span><span style="color:#B07D48;">todo</span><span style="color:#999999;">.</span><span style="color:#59873A;">concurrent</span><span style="color:#999999;">(</span><span style="color:#A0ADA0;">/* ... */</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// or test.concurrent.todo(/* ... */)</span></span></code></pre></div><p>When running concurrent tests, Snapshots and Assertions must use <code>expect</code> from the local <a href="/vitest.kr/guide/test-context.html">Test Context</a> to ensure the right test is detected.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#BD976A;">test</span><span style="color:#666666;">.</span><span style="color:#80A665;">concurrent</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">test 1</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">({</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expect</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">})</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">expect</span><span style="color:#666666;">(</span><span style="color:#BD976A;">foo</span><span style="color:#666666;">).</span><span style="color:#80A665;">toMatchSnapshot</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#BD976A;">test</span><span style="color:#666666;">.</span><span style="color:#80A665;">concurrent</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">test 2</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">({</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expect</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">})</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">expect</span><span style="color:#666666;">(</span><span style="color:#BD976A;">foo</span><span style="color:#666666;">).</span><span style="color:#80A665;">toMatchSnapshot</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#B07D48;">test</span><span style="color:#999999;">.</span><span style="color:#59873A;">concurrent</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">test 1</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#999999;">({</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expect</span><span style="color:#393A34;"> </span><span style="color:#999999;">})</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">expect</span><span style="color:#999999;">(</span><span style="color:#B07D48;">foo</span><span style="color:#999999;">).</span><span style="color:#59873A;">toMatchSnapshot</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#B07D48;">test</span><span style="color:#999999;">.</span><span style="color:#59873A;">concurrent</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">test 2</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#999999;">({</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expect</span><span style="color:#393A34;"> </span><span style="color:#999999;">})</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">expect</span><span style="color:#999999;">(</span><span style="color:#B07D48;">foo</span><span style="color:#999999;">).</span><span style="color:#59873A;">toMatchSnapshot</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div></li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>You cannot use this syntax, when using Vitest as <a href="/vitest.kr/guide/testing-types.html">type checker</a>.</p></div><h3 id="test-todo" tabindex="-1">test.todo <a class="header-anchor" href="#test-todo" aria-label="Permalink to &quot;test.todo&quot;">​</a></h3><ul><li><p><strong>Type:</strong> <code>(name: string | Function) =&gt; void</code></p></li><li><p><strong>Alias:</strong> <code>it.todo</code></p><p>Use <code>test.todo</code> to stub tests to be implemented later. An entry will be shown in the report for the tests so you know how many tests you still need to implement.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// An entry will be shown in the report for this test</span></span>
<span class="line"><span style="color:#BD976A;">test</span><span style="color:#666666;">.</span><span style="color:#80A665;">todo</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">unimplemented test</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// An entry will be shown in the report for this test</span></span>
<span class="line"><span style="color:#B07D48;">test</span><span style="color:#999999;">.</span><span style="color:#59873A;">todo</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">unimplemented test</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span></code></pre></div></li></ul><h3 id="test-fails" tabindex="-1">test.fails <a class="header-anchor" href="#test-fails" aria-label="Permalink to &quot;test.fails&quot;">​</a></h3><ul><li><p><strong>Type:</strong> <code>(name: string | Function, fn: TestFunction, timeout?: number) =&gt; void</code></p></li><li><p><strong>Alias:</strong> <code>it.fails</code></p><p>Use <code>test.fails</code> to indicate that an assertion will fail explicitly.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expect</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">test</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">myAsyncFunc</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">new</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">Promise</span><span style="color:#666666;">(</span><span style="color:#BD976A;">resolve</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">resolve</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">))</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#BD976A;">test</span><span style="color:#666666;">.</span><span style="color:#80A665;">fails</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">fail test</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">await</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">expect</span><span style="color:#666666;">(</span><span style="color:#80A665;">myAsyncFunc</span><span style="color:#666666;">()).</span><span style="color:#BD976A;">rejects</span><span style="color:#666666;">.</span><span style="color:#80A665;">toBe</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expect</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">test</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">myAsyncFunc</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#998418;">Promise</span><span style="color:#999999;">(</span><span style="color:#B07D48;">resolve</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#59873A;">resolve</span><span style="color:#999999;">(</span><span style="color:#2F798A;">1</span><span style="color:#999999;">))</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#B07D48;">test</span><span style="color:#999999;">.</span><span style="color:#59873A;">fails</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">fail test</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#59873A;">expect</span><span style="color:#999999;">(</span><span style="color:#59873A;">myAsyncFunc</span><span style="color:#999999;">()).</span><span style="color:#B07D48;">rejects</span><span style="color:#999999;">.</span><span style="color:#59873A;">toBe</span><span style="color:#999999;">(</span><span style="color:#2F798A;">1</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div></li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>You cannot use this syntax, when using Vitest as <a href="/vitest.kr/guide/testing-types.html">type checker</a>.</p></div><h3 id="test-each" tabindex="-1">test.each <a class="header-anchor" href="#test-each" aria-label="Permalink to &quot;test.each&quot;">​</a></h3><ul><li><p><strong>Type:</strong> <code>(cases: ReadonlyArray&lt;T&gt;, ...args: any[]) =&gt; void</code></p></li><li><p><strong>Alias:</strong> <code>it.each</code></p><p>Use <code>test.each</code> when you need to run the same test with different variables. You can inject parameters with <a href="https://nodejs.org/api/util.html#util_util_format_format_args" target="_blank" rel="noreferrer">printf formatting</a> in the test name in the order of the test function parameters.</p><ul><li><code>%s</code>: string</li><li><code>%d</code>: number</li><li><code>%i</code>: integer</li><li><code>%f</code>: floating point value</li><li><code>%j</code>: json</li><li><code>%o</code>: object</li><li><code>%#</code>: index of the test case</li><li><code>%%</code>: single percent sign (&#39;%&#39;)</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#BD976A;">test</span><span style="color:#666666;">.</span><span style="color:#80A665;">each</span><span style="color:#666666;">([</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">[</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">2</span><span style="color:#666666;">],</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">[</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">2</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">3</span><span style="color:#666666;">],</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">[</span><span style="color:#4C9A91;">2</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">3</span><span style="color:#666666;">],</span></span>
<span class="line"><span style="color:#666666;">])(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">add(%i, %i) -&gt; %i</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">a</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">b</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expected</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">expect</span><span style="color:#666666;">(</span><span style="color:#BD976A;">a</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">+</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">b</span><span style="color:#666666;">).</span><span style="color:#80A665;">toBe</span><span style="color:#666666;">(</span><span style="color:#BD976A;">expected</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#666666;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// this will return</span></span>
<span class="line"><span style="color:#758575DD;">// ✓ add(1, 1) -&gt; 2</span></span>
<span class="line"><span style="color:#758575DD;">// ✓ add(1, 2) -&gt; 3</span></span>
<span class="line"><span style="color:#758575DD;">// ✓ add(2, 1) -&gt; 3</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#B07D48;">test</span><span style="color:#999999;">.</span><span style="color:#59873A;">each</span><span style="color:#999999;">([</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">[</span><span style="color:#2F798A;">1</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">1</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">2</span><span style="color:#999999;">],</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">[</span><span style="color:#2F798A;">1</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">2</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">3</span><span style="color:#999999;">],</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">[</span><span style="color:#2F798A;">2</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">1</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">3</span><span style="color:#999999;">],</span></span>
<span class="line"><span style="color:#999999;">])(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">add(%i, %i) -&gt; %i</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">a</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">b</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expected</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">expect</span><span style="color:#999999;">(</span><span style="color:#B07D48;">a</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">+</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">b</span><span style="color:#999999;">).</span><span style="color:#59873A;">toBe</span><span style="color:#999999;">(</span><span style="color:#B07D48;">expected</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// this will return</span></span>
<span class="line"><span style="color:#A0ADA0;">// ✓ add(1, 1) -&gt; 2</span></span>
<span class="line"><span style="color:#A0ADA0;">// ✓ add(1, 2) -&gt; 3</span></span>
<span class="line"><span style="color:#A0ADA0;">// ✓ add(2, 1) -&gt; 3</span></span></code></pre></div><p>You can also access object properties with <code>$</code> prefix, if you are using objects as arguments:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#BD976A;">test</span><span style="color:#666666;">.</span><span style="color:#80A665;">each</span><span style="color:#666666;">([</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">{ </span><span style="color:#B8A965;">a</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">, </span><span style="color:#B8A965;">b</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">, </span><span style="color:#B8A965;">expected</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">2</span><span style="color:#666666;"> },</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">{ </span><span style="color:#B8A965;">a</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">, </span><span style="color:#B8A965;">b</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">2</span><span style="color:#666666;">, </span><span style="color:#B8A965;">expected</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">3</span><span style="color:#666666;"> },</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">{ </span><span style="color:#B8A965;">a</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">2</span><span style="color:#666666;">, </span><span style="color:#B8A965;">b</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">, </span><span style="color:#B8A965;">expected</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">3</span><span style="color:#666666;"> },</span></span>
<span class="line"><span style="color:#666666;">])(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">add($a, $b) -&gt; $expected</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">({</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">a</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">b</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expected</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">})</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">expect</span><span style="color:#666666;">(</span><span style="color:#BD976A;">a</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">+</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">b</span><span style="color:#666666;">).</span><span style="color:#80A665;">toBe</span><span style="color:#666666;">(</span><span style="color:#BD976A;">expected</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#666666;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// this will return</span></span>
<span class="line"><span style="color:#758575DD;">// ✓ add(1, 1) -&gt; 2</span></span>
<span class="line"><span style="color:#758575DD;">// ✓ add(1, 2) -&gt; 3</span></span>
<span class="line"><span style="color:#758575DD;">// ✓ add(2, 1) -&gt; 3</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#B07D48;">test</span><span style="color:#999999;">.</span><span style="color:#59873A;">each</span><span style="color:#999999;">([</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">{ </span><span style="color:#998418;">a</span><span style="color:#999999;">: </span><span style="color:#2F798A;">1</span><span style="color:#999999;">, </span><span style="color:#998418;">b</span><span style="color:#999999;">: </span><span style="color:#2F798A;">1</span><span style="color:#999999;">, </span><span style="color:#998418;">expected</span><span style="color:#999999;">: </span><span style="color:#2F798A;">2</span><span style="color:#999999;"> },</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">{ </span><span style="color:#998418;">a</span><span style="color:#999999;">: </span><span style="color:#2F798A;">1</span><span style="color:#999999;">, </span><span style="color:#998418;">b</span><span style="color:#999999;">: </span><span style="color:#2F798A;">2</span><span style="color:#999999;">, </span><span style="color:#998418;">expected</span><span style="color:#999999;">: </span><span style="color:#2F798A;">3</span><span style="color:#999999;"> },</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">{ </span><span style="color:#998418;">a</span><span style="color:#999999;">: </span><span style="color:#2F798A;">2</span><span style="color:#999999;">, </span><span style="color:#998418;">b</span><span style="color:#999999;">: </span><span style="color:#2F798A;">1</span><span style="color:#999999;">, </span><span style="color:#998418;">expected</span><span style="color:#999999;">: </span><span style="color:#2F798A;">3</span><span style="color:#999999;"> },</span></span>
<span class="line"><span style="color:#999999;">])(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">add($a, $b) -&gt; $expected</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">({</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">a</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">b</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expected</span><span style="color:#393A34;"> </span><span style="color:#999999;">})</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">expect</span><span style="color:#999999;">(</span><span style="color:#B07D48;">a</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">+</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">b</span><span style="color:#999999;">).</span><span style="color:#59873A;">toBe</span><span style="color:#999999;">(</span><span style="color:#B07D48;">expected</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// this will return</span></span>
<span class="line"><span style="color:#A0ADA0;">// ✓ add(1, 1) -&gt; 2</span></span>
<span class="line"><span style="color:#A0ADA0;">// ✓ add(1, 2) -&gt; 3</span></span>
<span class="line"><span style="color:#A0ADA0;">// ✓ add(2, 1) -&gt; 3</span></span></code></pre></div><p>You can also access Object attributes with <code>.</code>, if you are using objects as arguments:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#BD976A;">test</span><span style="color:#666666;">.</span><span style="color:#80A665;">each</span><span style="color:#C98A7D99;">\`</span></span>
<span class="line"><span style="color:#C98A7D;">a               | b      | expected</span></span>
<span class="line"><span style="color:#666666;">\${</span><span style="color:#666666;">{ </span><span style="color:#B8A965;">val</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">1</span><span style="color:#666666;"> }</span><span style="color:#666666;">}</span><span style="color:#C98A7D;">   | </span><span style="color:#666666;">\${</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">b</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">}</span><span style="color:#C98A7D;"> | </span><span style="color:#666666;">\${</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">1b</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#666666;">\${</span><span style="color:#666666;">{ </span><span style="color:#B8A965;">val</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">2</span><span style="color:#666666;"> }</span><span style="color:#666666;">}</span><span style="color:#C98A7D;">   | </span><span style="color:#666666;">\${</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">b</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">}</span><span style="color:#C98A7D;"> | </span><span style="color:#666666;">\${</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">2b</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#666666;">\${</span><span style="color:#666666;">{ </span><span style="color:#B8A965;">val</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">3</span><span style="color:#666666;"> }</span><span style="color:#666666;">}</span><span style="color:#C98A7D;">   | </span><span style="color:#666666;">\${</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">b</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">}</span><span style="color:#C98A7D;"> | </span><span style="color:#666666;">\${</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">3b</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#C98A7D99;">\`</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">add($a.val, $b) -&gt; $expected</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">({</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">a</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">b</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expected</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">})</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">expect</span><span style="color:#666666;">(</span><span style="color:#BD976A;">a</span><span style="color:#666666;">.</span><span style="color:#BD976A;">val</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">+</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">b</span><span style="color:#666666;">).</span><span style="color:#80A665;">toBe</span><span style="color:#666666;">(</span><span style="color:#BD976A;">expected</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#666666;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// this will return</span></span>
<span class="line"><span style="color:#758575DD;">// ✓ add(1, b) -&gt; 1b</span></span>
<span class="line"><span style="color:#758575DD;">// ✓ add(2, b) -&gt; 2b</span></span>
<span class="line"><span style="color:#758575DD;">// ✓ add(3, b) -&gt; 3b</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#B07D48;">test</span><span style="color:#999999;">.</span><span style="color:#59873A;">each</span><span style="color:#B5695999;">\`</span></span>
<span class="line"><span style="color:#B56959;">a               | b      | expected</span></span>
<span class="line"><span style="color:#999999;">\${</span><span style="color:#999999;">{ </span><span style="color:#998418;">val</span><span style="color:#999999;">: </span><span style="color:#2F798A;">1</span><span style="color:#999999;"> }</span><span style="color:#999999;">}</span><span style="color:#B56959;">   | </span><span style="color:#999999;">\${</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">b</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">}</span><span style="color:#B56959;"> | </span><span style="color:#999999;">\${</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">1b</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">\${</span><span style="color:#999999;">{ </span><span style="color:#998418;">val</span><span style="color:#999999;">: </span><span style="color:#2F798A;">2</span><span style="color:#999999;"> }</span><span style="color:#999999;">}</span><span style="color:#B56959;">   | </span><span style="color:#999999;">\${</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">b</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">}</span><span style="color:#B56959;"> | </span><span style="color:#999999;">\${</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">2b</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">\${</span><span style="color:#999999;">{ </span><span style="color:#998418;">val</span><span style="color:#999999;">: </span><span style="color:#2F798A;">3</span><span style="color:#999999;"> }</span><span style="color:#999999;">}</span><span style="color:#B56959;">   | </span><span style="color:#999999;">\${</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">b</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">}</span><span style="color:#B56959;"> | </span><span style="color:#999999;">\${</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">3b</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#B5695999;">\`</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">add($a.val, $b) -&gt; $expected</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">({</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">a</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">b</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expected</span><span style="color:#393A34;"> </span><span style="color:#999999;">})</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">expect</span><span style="color:#999999;">(</span><span style="color:#B07D48;">a</span><span style="color:#999999;">.</span><span style="color:#B07D48;">val</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">+</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">b</span><span style="color:#999999;">).</span><span style="color:#59873A;">toBe</span><span style="color:#999999;">(</span><span style="color:#B07D48;">expected</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// this will return</span></span>
<span class="line"><span style="color:#A0ADA0;">// ✓ add(1, b) -&gt; 1b</span></span>
<span class="line"><span style="color:#A0ADA0;">// ✓ add(2, b) -&gt; 2b</span></span>
<span class="line"><span style="color:#A0ADA0;">// ✓ add(3, b) -&gt; 3b</span></span></code></pre></div><p>Starting from Vitest 0.25.3, you can also use template string table.</p><ul><li>First row should be column names, separated by <code>|</code>;</li><li>One or more subsequent rows of data supplied as template literal expressions using <code>\${value}</code> syntax.</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#BD976A;">test</span><span style="color:#666666;">.</span><span style="color:#80A665;">each</span><span style="color:#C98A7D99;">\`</span></span>
<span class="line"><span style="color:#C98A7D;">  a               | b      | expected</span></span>
<span class="line"><span style="color:#C98A7D;">  </span><span style="color:#666666;">\${</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">}</span><span style="color:#C98A7D;">            | </span><span style="color:#666666;">\${</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">}</span><span style="color:#C98A7D;">   | </span><span style="color:#666666;">\${</span><span style="color:#4C9A91;">2</span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#C98A7D;">  </span><span style="color:#666666;">\${</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">a</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">}</span><span style="color:#C98A7D;">          | </span><span style="color:#666666;">\${</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">b</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">}</span><span style="color:#C98A7D;"> | </span><span style="color:#666666;">\${</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">ab</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#C98A7D;">  </span><span style="color:#666666;">\${</span><span style="color:#666666;">[]</span><span style="color:#666666;">}</span><span style="color:#C98A7D;">           | </span><span style="color:#666666;">\${</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">b</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">}</span><span style="color:#C98A7D;"> | </span><span style="color:#666666;">\${</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">b</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#C98A7D;">  </span><span style="color:#666666;">\${</span><span style="color:#666666;">{}</span><span style="color:#666666;">}</span><span style="color:#C98A7D;">           | </span><span style="color:#666666;">\${</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">b</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">}</span><span style="color:#C98A7D;"> | </span><span style="color:#666666;">\${</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">[object Object]b</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#C98A7D;">  </span><span style="color:#666666;">\${</span><span style="color:#666666;">{ </span><span style="color:#B8A965;">asd</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">1</span><span style="color:#666666;"> }</span><span style="color:#666666;">}</span><span style="color:#C98A7D;">   | </span><span style="color:#666666;">\${</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">b</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">}</span><span style="color:#C98A7D;"> | </span><span style="color:#666666;">\${</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">[object Object]b</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#C98A7D99;">\`</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">returns $expected when $a is added $b</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">({</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">a</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">b</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expected</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">})</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">expect</span><span style="color:#666666;">(</span><span style="color:#BD976A;">a</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">+</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">b</span><span style="color:#666666;">).</span><span style="color:#80A665;">toBe</span><span style="color:#666666;">(</span><span style="color:#BD976A;">expected</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#B07D48;">test</span><span style="color:#999999;">.</span><span style="color:#59873A;">each</span><span style="color:#B5695999;">\`</span></span>
<span class="line"><span style="color:#B56959;">  a               | b      | expected</span></span>
<span class="line"><span style="color:#B56959;">  </span><span style="color:#999999;">\${</span><span style="color:#2F798A;">1</span><span style="color:#999999;">}</span><span style="color:#B56959;">            | </span><span style="color:#999999;">\${</span><span style="color:#2F798A;">1</span><span style="color:#999999;">}</span><span style="color:#B56959;">   | </span><span style="color:#999999;">\${</span><span style="color:#2F798A;">2</span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#B56959;">  </span><span style="color:#999999;">\${</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">a</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">}</span><span style="color:#B56959;">          | </span><span style="color:#999999;">\${</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">b</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">}</span><span style="color:#B56959;"> | </span><span style="color:#999999;">\${</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">ab</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#B56959;">  </span><span style="color:#999999;">\${</span><span style="color:#999999;">[]</span><span style="color:#999999;">}</span><span style="color:#B56959;">           | </span><span style="color:#999999;">\${</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">b</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">}</span><span style="color:#B56959;"> | </span><span style="color:#999999;">\${</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">b</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#B56959;">  </span><span style="color:#999999;">\${</span><span style="color:#999999;">{}</span><span style="color:#999999;">}</span><span style="color:#B56959;">           | </span><span style="color:#999999;">\${</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">b</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">}</span><span style="color:#B56959;"> | </span><span style="color:#999999;">\${</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">[object Object]b</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#B56959;">  </span><span style="color:#999999;">\${</span><span style="color:#999999;">{ </span><span style="color:#998418;">asd</span><span style="color:#999999;">: </span><span style="color:#2F798A;">1</span><span style="color:#999999;"> }</span><span style="color:#999999;">}</span><span style="color:#B56959;">   | </span><span style="color:#999999;">\${</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">b</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">}</span><span style="color:#B56959;"> | </span><span style="color:#999999;">\${</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">[object Object]b</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#B5695999;">\`</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">returns $expected when $a is added $b</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">({</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">a</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">b</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expected</span><span style="color:#393A34;"> </span><span style="color:#999999;">})</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">expect</span><span style="color:#999999;">(</span><span style="color:#B07D48;">a</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">+</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">b</span><span style="color:#999999;">).</span><span style="color:#59873A;">toBe</span><span style="color:#999999;">(</span><span style="color:#B07D48;">expected</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div><p>If you want to have access to <code>TestContext</code>, use <code>describe.each</code> with a single test.</p></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Vitest processes <code>$values</code> with chai <code>format</code> method. If the value is too truncated, you can increase <a href="/vitest.kr/config/#chaiconfig-truncatethreshold">chaiConfig.truncateThreshold</a> in your config file.</p></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>You cannot use this syntax, when using Vitest as <a href="/vitest.kr/guide/testing-types.html">type checker</a>.</p></div><h2 id="bench" tabindex="-1">bench <a class="header-anchor" href="#bench" aria-label="Permalink to &quot;bench&quot;">​</a></h2><ul><li><strong>Type:</strong> <code>(name: string | Function, fn: BenchFunction, options?: BenchOptions) =&gt; void</code></li></ul><p><code>bench</code> defines a benchmark. In Vitest terms benchmark is a function that defines a series of operations. Vitest runs this function multiple times to display different performance results.</p><p>Vitest uses <a href="https://github.com/tinylibs/tinybench" target="_blank" rel="noreferrer"><code>tinybench</code></a> library under the hood, inheriting all its options that can be used as a third argument.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">bench</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">bench</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">normal sorting</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">x</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#666666;">[</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#4C9A91;">5</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#4C9A91;">4</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#4C9A91;">2</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#4C9A91;">3</span><span style="color:#666666;">]</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">x</span><span style="color:#666666;">.</span><span style="color:#80A665;">sort</span><span style="color:#666666;">((</span><span style="color:#BD976A;">a</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">b</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">a</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">-</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">b</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#666666;">},</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{ </span><span style="color:#B8A965;">time</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">1000</span><span style="color:#666666;"> })</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">bench</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">bench</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">normal sorting</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">x</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#999999;">[</span><span style="color:#2F798A;">1</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#2F798A;">5</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#2F798A;">4</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#2F798A;">2</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#2F798A;">3</span><span style="color:#999999;">]</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">x</span><span style="color:#999999;">.</span><span style="color:#59873A;">sort</span><span style="color:#999999;">((</span><span style="color:#B07D48;">a</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">b</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">a</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">-</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">b</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#999999;">},</span><span style="color:#393A34;"> </span><span style="color:#999999;">{ </span><span style="color:#998418;">time</span><span style="color:#999999;">: </span><span style="color:#2F798A;">1000</span><span style="color:#999999;"> })</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">interface</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">Options</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#758575DD;">/**</span></span>
<span class="line"><span style="color:#758575DD;">   * time needed for running a benchmark task (milliseconds)</span></span>
<span class="line"><span style="color:#758575DD;">   * </span><span style="color:#666666;">@</span><span style="color:#4D9375;">default</span><span style="color:#758575DD;"> </span><span style="color:#BD976A;">500</span></span>
<span class="line"><span style="color:#758575DD;">   */</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">time</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: </span><span style="color:#5DA994;">number</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#758575DD;">/**</span></span>
<span class="line"><span style="color:#758575DD;">   * number of times that a task should run if even the time option is finished</span></span>
<span class="line"><span style="color:#758575DD;">   * </span><span style="color:#666666;">@</span><span style="color:#4D9375;">default</span><span style="color:#758575DD;"> </span><span style="color:#BD976A;">10</span></span>
<span class="line"><span style="color:#758575DD;">   */</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">iterations</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: </span><span style="color:#5DA994;">number</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#758575DD;">/**</span></span>
<span class="line"><span style="color:#758575DD;">   * function to get the current timestamp in milliseconds</span></span>
<span class="line"><span style="color:#758575DD;">   */</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">now</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: () =&gt; </span><span style="color:#5DA994;">number</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#758575DD;">/**</span></span>
<span class="line"><span style="color:#758575DD;">   * An AbortSignal for aborting the benchmark</span></span>
<span class="line"><span style="color:#758575DD;">   */</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">signal</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: </span><span style="color:#5DA994;">AbortSignal</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#758575DD;">/**</span></span>
<span class="line"><span style="color:#758575DD;">   * warmup time (milliseconds)</span></span>
<span class="line"><span style="color:#758575DD;">   * </span><span style="color:#666666;">@</span><span style="color:#4D9375;">default</span><span style="color:#758575DD;"> </span><span style="color:#BD976A;">100ms</span></span>
<span class="line"><span style="color:#758575DD;">   */</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">warmupTime</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: </span><span style="color:#5DA994;">number</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#758575DD;">/**</span></span>
<span class="line"><span style="color:#758575DD;">   * warmup iterations</span></span>
<span class="line"><span style="color:#758575DD;">   * </span><span style="color:#666666;">@</span><span style="color:#4D9375;">default</span><span style="color:#758575DD;"> </span><span style="color:#BD976A;">5</span></span>
<span class="line"><span style="color:#758575DD;">   */</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">warmupIterations</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: </span><span style="color:#5DA994;">number</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#758575DD;">/**</span></span>
<span class="line"><span style="color:#758575DD;">   * setup function to run before each benchmark task (cycle)</span></span>
<span class="line"><span style="color:#758575DD;">   */</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">setup</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: </span><span style="color:#5DA994;">Hook</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#758575DD;">/**</span></span>
<span class="line"><span style="color:#758575DD;">   * teardown function to run after each benchmark task (cycle)</span></span>
<span class="line"><span style="color:#758575DD;">   */</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">teardown</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: </span><span style="color:#5DA994;">Hook</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">interface</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">Options</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">/**</span></span>
<span class="line"><span style="color:#A0ADA0;">   * time needed for running a benchmark task (milliseconds)</span></span>
<span class="line"><span style="color:#A0ADA0;">   * </span><span style="color:#999999;">@</span><span style="color:#1E754F;">default</span><span style="color:#A0ADA0;"> </span><span style="color:#B07D48;">500</span></span>
<span class="line"><span style="color:#A0ADA0;">   */</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">time</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">number</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">/**</span></span>
<span class="line"><span style="color:#A0ADA0;">   * number of times that a task should run if even the time option is finished</span></span>
<span class="line"><span style="color:#A0ADA0;">   * </span><span style="color:#999999;">@</span><span style="color:#1E754F;">default</span><span style="color:#A0ADA0;"> </span><span style="color:#B07D48;">10</span></span>
<span class="line"><span style="color:#A0ADA0;">   */</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">iterations</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">number</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">/**</span></span>
<span class="line"><span style="color:#A0ADA0;">   * function to get the current timestamp in milliseconds</span></span>
<span class="line"><span style="color:#A0ADA0;">   */</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">now</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: () =&gt; </span><span style="color:#2E8F82;">number</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">/**</span></span>
<span class="line"><span style="color:#A0ADA0;">   * An AbortSignal for aborting the benchmark</span></span>
<span class="line"><span style="color:#A0ADA0;">   */</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">signal</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">AbortSignal</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">/**</span></span>
<span class="line"><span style="color:#A0ADA0;">   * warmup time (milliseconds)</span></span>
<span class="line"><span style="color:#A0ADA0;">   * </span><span style="color:#999999;">@</span><span style="color:#1E754F;">default</span><span style="color:#A0ADA0;"> </span><span style="color:#B07D48;">100ms</span></span>
<span class="line"><span style="color:#A0ADA0;">   */</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">warmupTime</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">number</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">/**</span></span>
<span class="line"><span style="color:#A0ADA0;">   * warmup iterations</span></span>
<span class="line"><span style="color:#A0ADA0;">   * </span><span style="color:#999999;">@</span><span style="color:#1E754F;">default</span><span style="color:#A0ADA0;"> </span><span style="color:#B07D48;">5</span></span>
<span class="line"><span style="color:#A0ADA0;">   */</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">warmupIterations</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">number</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">/**</span></span>
<span class="line"><span style="color:#A0ADA0;">   * setup function to run before each benchmark task (cycle)</span></span>
<span class="line"><span style="color:#A0ADA0;">   */</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">setup</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">Hook</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">/**</span></span>
<span class="line"><span style="color:#A0ADA0;">   * teardown function to run after each benchmark task (cycle)</span></span>
<span class="line"><span style="color:#A0ADA0;">   */</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">teardown</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">Hook</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><h3 id="bench-skip" tabindex="-1">bench.skip <a class="header-anchor" href="#bench-skip" aria-label="Permalink to &quot;bench.skip&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>(name: string | Function, fn: BenchFunction, options?: BenchOptions) =&gt; void</code></li></ul><p>You can use <code>bench.skip</code> syntax to skip running certain benchmarks.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">bench</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD976A;">bench</span><span style="color:#666666;">.</span><span style="color:#80A665;">skip</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">normal sorting</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">x</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#666666;">[</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#4C9A91;">5</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#4C9A91;">4</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#4C9A91;">2</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#4C9A91;">3</span><span style="color:#666666;">]</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">x</span><span style="color:#666666;">.</span><span style="color:#80A665;">sort</span><span style="color:#666666;">((</span><span style="color:#BD976A;">a</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">b</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">a</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">-</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">b</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">bench</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B07D48;">bench</span><span style="color:#999999;">.</span><span style="color:#59873A;">skip</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">normal sorting</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">x</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#999999;">[</span><span style="color:#2F798A;">1</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#2F798A;">5</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#2F798A;">4</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#2F798A;">2</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#2F798A;">3</span><span style="color:#999999;">]</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">x</span><span style="color:#999999;">.</span><span style="color:#59873A;">sort</span><span style="color:#999999;">((</span><span style="color:#B07D48;">a</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">b</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">a</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">-</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">b</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div><h3 id="bench-only" tabindex="-1">bench.only <a class="header-anchor" href="#bench-only" aria-label="Permalink to &quot;bench.only&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>(name: string | Function, fn: BenchFunction, options?: BenchOptions) =&gt; void</code></li></ul><p>Use <code>bench.only</code> to only run certain benchmarks in a given suite. This is useful when debugging.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">bench</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD976A;">bench</span><span style="color:#666666;">.</span><span style="color:#80A665;">only</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">normal sorting</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">x</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#666666;">[</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#4C9A91;">5</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#4C9A91;">4</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#4C9A91;">2</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#4C9A91;">3</span><span style="color:#666666;">]</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">x</span><span style="color:#666666;">.</span><span style="color:#80A665;">sort</span><span style="color:#666666;">((</span><span style="color:#BD976A;">a</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">b</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">a</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">-</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">b</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">bench</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B07D48;">bench</span><span style="color:#999999;">.</span><span style="color:#59873A;">only</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">normal sorting</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">x</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#999999;">[</span><span style="color:#2F798A;">1</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#2F798A;">5</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#2F798A;">4</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#2F798A;">2</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#2F798A;">3</span><span style="color:#999999;">]</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">x</span><span style="color:#999999;">.</span><span style="color:#59873A;">sort</span><span style="color:#999999;">((</span><span style="color:#B07D48;">a</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">b</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">a</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">-</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">b</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div><h3 id="bench-todo" tabindex="-1">bench.todo <a class="header-anchor" href="#bench-todo" aria-label="Permalink to &quot;bench.todo&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>(name: string | Function) =&gt; void</code></li></ul><p>Use <code>bench.todo</code> to stub benchmarks to be implemented later.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">bench</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD976A;">bench</span><span style="color:#666666;">.</span><span style="color:#80A665;">todo</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">unimplemented test</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">bench</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B07D48;">bench</span><span style="color:#999999;">.</span><span style="color:#59873A;">todo</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">unimplemented test</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span></code></pre></div><h2 id="describe" tabindex="-1">describe <a class="header-anchor" href="#describe" aria-label="Permalink to &quot;describe&quot;">​</a></h2><p>When you use <code>test</code> or <code>bench</code> in the top level of file, they are collected as part of the implicit suite for it. Using <code>describe</code> you can define a new suite in the current context, as a set of related tests or benchmarks and other nested suites. A suite lets you organize your tests and benchmarks so reports are more clear.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// basic.spec.ts</span></span>
<span class="line"><span style="color:#758575DD;">// organizing tests</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">describe</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expect</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">test</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">person</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#B8A965;">isActive</span><span style="color:#666666;">: </span><span style="color:#4D9375;">true</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#B8A965;">age</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">32</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">describe</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">person</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">test</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">person is defined</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#80A665;">expect</span><span style="color:#666666;">(</span><span style="color:#BD976A;">person</span><span style="color:#666666;">).</span><span style="color:#80A665;">toBeDefined</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">test</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">is active</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#80A665;">expect</span><span style="color:#666666;">(</span><span style="color:#BD976A;">person</span><span style="color:#666666;">.</span><span style="color:#BD976A;">isActive</span><span style="color:#666666;">).</span><span style="color:#80A665;">toBeTruthy</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">test</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">age limit</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#80A665;">expect</span><span style="color:#666666;">(</span><span style="color:#BD976A;">person</span><span style="color:#666666;">.</span><span style="color:#BD976A;">age</span><span style="color:#666666;">).</span><span style="color:#80A665;">toBeLessThanOrEqual</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">32</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// basic.spec.ts</span></span>
<span class="line"><span style="color:#A0ADA0;">// organizing tests</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">describe</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expect</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">test</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">person</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">isActive</span><span style="color:#999999;">: </span><span style="color:#1E754F;">true</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">age</span><span style="color:#999999;">: </span><span style="color:#2F798A;">32</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">describe</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">person</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">test</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">person is defined</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">expect</span><span style="color:#999999;">(</span><span style="color:#B07D48;">person</span><span style="color:#999999;">).</span><span style="color:#59873A;">toBeDefined</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">test</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">is active</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">expect</span><span style="color:#999999;">(</span><span style="color:#B07D48;">person</span><span style="color:#999999;">.</span><span style="color:#B07D48;">isActive</span><span style="color:#999999;">).</span><span style="color:#59873A;">toBeTruthy</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">test</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">age limit</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">expect</span><span style="color:#999999;">(</span><span style="color:#B07D48;">person</span><span style="color:#999999;">.</span><span style="color:#B07D48;">age</span><span style="color:#999999;">).</span><span style="color:#59873A;">toBeLessThanOrEqual</span><span style="color:#999999;">(</span><span style="color:#2F798A;">32</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// basic.bench.ts</span></span>
<span class="line"><span style="color:#758575DD;">// organizing benchmarks</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">bench</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">describe</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">describe</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">sort</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">bench</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">normal</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">x</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#666666;">[</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#4C9A91;">5</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#4C9A91;">4</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#4C9A91;">2</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#4C9A91;">3</span><span style="color:#666666;">]</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">x</span><span style="color:#666666;">.</span><span style="color:#80A665;">sort</span><span style="color:#666666;">((</span><span style="color:#BD976A;">a</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">b</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">a</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">-</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">b</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">bench</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">reverse</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">x</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#666666;">[</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#4C9A91;">5</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#4C9A91;">4</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#4C9A91;">2</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#4C9A91;">3</span><span style="color:#666666;">]</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">x</span><span style="color:#666666;">.</span><span style="color:#80A665;">reverse</span><span style="color:#666666;">().</span><span style="color:#80A665;">sort</span><span style="color:#666666;">((</span><span style="color:#BD976A;">a</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">b</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">a</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">-</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">b</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// basic.bench.ts</span></span>
<span class="line"><span style="color:#A0ADA0;">// organizing benchmarks</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">bench</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">describe</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">describe</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">sort</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">bench</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">normal</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">x</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#999999;">[</span><span style="color:#2F798A;">1</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#2F798A;">5</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#2F798A;">4</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#2F798A;">2</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#2F798A;">3</span><span style="color:#999999;">]</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">x</span><span style="color:#999999;">.</span><span style="color:#59873A;">sort</span><span style="color:#999999;">((</span><span style="color:#B07D48;">a</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">b</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">a</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">-</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">b</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">bench</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">reverse</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">x</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#999999;">[</span><span style="color:#2F798A;">1</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#2F798A;">5</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#2F798A;">4</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#2F798A;">2</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#2F798A;">3</span><span style="color:#999999;">]</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">x</span><span style="color:#999999;">.</span><span style="color:#59873A;">reverse</span><span style="color:#999999;">().</span><span style="color:#59873A;">sort</span><span style="color:#999999;">((</span><span style="color:#B07D48;">a</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">b</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">a</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">-</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">b</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div><p>You can also nest describe blocks if you have a hierarchy of tests or benchmarks:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">describe</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expect</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">test</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">numberToCurrency</span><span style="color:#666666;">(</span><span style="color:#BD976A;">value</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#CB7676;">typeof</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">value</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">!==</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">number</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">throw</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">new</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">Error</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">Value must be a number</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">value</span><span style="color:#666666;">.</span><span style="color:#80A665;">toFixed</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">2</span><span style="color:#666666;">).</span><span style="color:#80A665;">toString</span><span style="color:#666666;">().</span><span style="color:#80A665;">replace</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">/</span><span style="color:#4D9375;">\\B</span><span style="color:#666666;">(?=(</span><span style="color:#C99076;">\\d</span><span style="color:#CB7676;">{3}</span><span style="color:#666666;">)</span><span style="color:#CB7676;">+</span><span style="color:#666666;">(?!</span><span style="color:#C99076;">\\d</span><span style="color:#666666;">))</span><span style="color:#C98A7D99;">/</span><span style="color:#4D9375;">g</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">,</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">describe</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">numberToCurrency</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">describe</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">given an invalid number</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#80A665;">test</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">composed of non-numbers to throw error</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#80A665;">expect</span><span style="color:#666666;">(()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">numberToCurrency</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">abc</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)).</span><span style="color:#80A665;">toThrowError</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">describe</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">given a valid number</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#80A665;">test</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">returns the correct currency format</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#80A665;">expect</span><span style="color:#666666;">(</span><span style="color:#80A665;">numberToCurrency</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">10000</span><span style="color:#666666;">)).</span><span style="color:#80A665;">toBe</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">10,000.00</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">describe</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expect</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">test</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">numberToCurrency</span><span style="color:#999999;">(</span><span style="color:#B07D48;">value</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#AB5959;">typeof</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">value</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">!==</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">number</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">throw</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#59873A;">Error</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">Value must be a number</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">value</span><span style="color:#999999;">.</span><span style="color:#59873A;">toFixed</span><span style="color:#999999;">(</span><span style="color:#2F798A;">2</span><span style="color:#999999;">).</span><span style="color:#59873A;">toString</span><span style="color:#999999;">().</span><span style="color:#59873A;">replace</span><span style="color:#999999;">(</span><span style="color:#B5695999;">/</span><span style="color:#1E754F;">\\B</span><span style="color:#999999;">(?=(</span><span style="color:#A65E2B;">\\d</span><span style="color:#AB5959;">{3}</span><span style="color:#999999;">)</span><span style="color:#AB5959;">+</span><span style="color:#999999;">(?!</span><span style="color:#A65E2B;">\\d</span><span style="color:#999999;">))</span><span style="color:#B5695999;">/</span><span style="color:#1E754F;">g</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">,</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">describe</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">numberToCurrency</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">describe</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">given an invalid number</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">test</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">composed of non-numbers to throw error</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#59873A;">expect</span><span style="color:#999999;">(()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#59873A;">numberToCurrency</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">abc</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)).</span><span style="color:#59873A;">toThrowError</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">describe</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">given a valid number</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">test</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">returns the correct currency format</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#59873A;">expect</span><span style="color:#999999;">(</span><span style="color:#59873A;">numberToCurrency</span><span style="color:#999999;">(</span><span style="color:#2F798A;">10000</span><span style="color:#999999;">)).</span><span style="color:#59873A;">toBe</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">10,000.00</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div><h3 id="describe-skip" tabindex="-1">describe.skip <a class="header-anchor" href="#describe-skip" aria-label="Permalink to &quot;describe.skip&quot;">​</a></h3><ul><li><p><strong>Type:</strong> <code>(name: string | Function, fn: TestFunction, options?: number | TestOptions) =&gt; void</code></p><p>Use <code>describe.skip</code> in a suite to avoid running a particular describe block.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">assert</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">describe</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">test</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD976A;">describe</span><span style="color:#666666;">.</span><span style="color:#80A665;">skip</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">skipped suite</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">test</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">sqrt</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">// Suite skipped, no error</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">assert</span><span style="color:#666666;">.</span><span style="color:#80A665;">equal</span><span style="color:#666666;">(</span><span style="color:#BD976A;">Math</span><span style="color:#666666;">.</span><span style="color:#80A665;">sqrt</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">4</span><span style="color:#666666;">),</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">3</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">assert</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">describe</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">test</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B07D48;">describe</span><span style="color:#999999;">.</span><span style="color:#59873A;">skip</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">skipped suite</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">test</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">sqrt</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// Suite skipped, no error</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">assert</span><span style="color:#999999;">.</span><span style="color:#59873A;">equal</span><span style="color:#999999;">(</span><span style="color:#B07D48;">Math</span><span style="color:#999999;">.</span><span style="color:#59873A;">sqrt</span><span style="color:#999999;">(</span><span style="color:#2F798A;">4</span><span style="color:#999999;">),</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">3</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div></li></ul><h3 id="describe-skipif" tabindex="-1">describe.skipIf <a class="header-anchor" href="#describe-skipif" aria-label="Permalink to &quot;describe.skipIf&quot;">​</a></h3><ul><li><p><strong>Type:</strong> <code>(condition: any) =&gt; void</code></p><p>In some cases, you might run suites multiple times with different environments, and some of the suites might be environment-specific. Instead of wrapping the suite with <code>if</code>, you can use <code>describe.skipIf</code> to skip the suite whenever the condition is truthy.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">describe</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">test</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">isDev</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">process</span><span style="color:#666666;">.</span><span style="color:#BD976A;">env</span><span style="color:#666666;">.</span><span style="color:#BD976A;">NODE_ENV</span><span style="color:#CB7676;"> === </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">development</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD976A;">describe</span><span style="color:#666666;">.</span><span style="color:#80A665;">skipIf</span><span style="color:#666666;">(</span><span style="color:#BD976A;">isDev</span><span style="color:#666666;">)(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">prod only test</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// this test only runs in production</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">describe</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">test</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">isDev</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">process</span><span style="color:#999999;">.</span><span style="color:#B07D48;">env</span><span style="color:#999999;">.</span><span style="color:#B07D48;">NODE_ENV</span><span style="color:#AB5959;"> === </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">development</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B07D48;">describe</span><span style="color:#999999;">.</span><span style="color:#59873A;">skipIf</span><span style="color:#999999;">(</span><span style="color:#B07D48;">isDev</span><span style="color:#999999;">)(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">prod only test</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// this test only runs in production</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div></li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>You cannot use this syntax when using Vitest as <a href="/vitest.kr/guide/testing-types.html">type checker</a>.</p></div><h3 id="describe-only" tabindex="-1">describe.only <a class="header-anchor" href="#describe-only" aria-label="Permalink to &quot;describe.only&quot;">​</a></h3><ul><li><p><strong>Type:</strong> <code>(name: string | Function, fn: TestFunction, options?: number | TestOptions) =&gt; void</code></p><p>Use <code>describe.only</code> to only run certain suites</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// Only this suite (and others marked with only) are run</span></span>
<span class="line"><span style="color:#BD976A;">describe</span><span style="color:#666666;">.</span><span style="color:#80A665;">only</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">suite</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">test</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">sqrt</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">assert</span><span style="color:#666666;">.</span><span style="color:#80A665;">equal</span><span style="color:#666666;">(</span><span style="color:#BD976A;">Math</span><span style="color:#666666;">.</span><span style="color:#80A665;">sqrt</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">4</span><span style="color:#666666;">),</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">3</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#666666;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">describe</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">other suite</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// ... will be skipped</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// Only this suite (and others marked with only) are run</span></span>
<span class="line"><span style="color:#B07D48;">describe</span><span style="color:#999999;">.</span><span style="color:#59873A;">only</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">suite</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">test</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">sqrt</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">assert</span><span style="color:#999999;">.</span><span style="color:#59873A;">equal</span><span style="color:#999999;">(</span><span style="color:#B07D48;">Math</span><span style="color:#999999;">.</span><span style="color:#59873A;">sqrt</span><span style="color:#999999;">(</span><span style="color:#2F798A;">4</span><span style="color:#999999;">),</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">3</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#999999;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">describe</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">other suite</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// ... will be skipped</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div><p>Sometimes it is very useful to run <code>only</code> tests in a certain file, ignoring all other tests from the whole test suite, which pollute the output.</p><p>In order to do that run <code>vitest</code> with specific file containing the tests in question.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#dbd7caee;"># vitest interesting.test.ts</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#393a34;"># vitest interesting.test.ts</span></span></code></pre></div></li></ul><h3 id="describe-concurrent" tabindex="-1">describe.concurrent <a class="header-anchor" href="#describe-concurrent" aria-label="Permalink to &quot;describe.concurrent&quot;">​</a></h3><ul><li><p><strong>Type:</strong> <code>(name: string | Function, fn: TestFunction, options?: number | TestOptions) =&gt; void</code></p><p><code>describe.concurrent</code> in a suite marks every tests as concurrent</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// All tests within this suite will be run in parallel</span></span>
<span class="line"><span style="color:#BD976A;">describe</span><span style="color:#666666;">.</span><span style="color:#80A665;">concurrent</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">suite</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">test</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">concurrent test 1</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">/* ... */</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">test</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">concurrent test 2</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">/* ... */</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">test</span><span style="color:#666666;">.</span><span style="color:#80A665;">concurrent</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">concurrent test 3</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">/* ... */</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// All tests within this suite will be run in parallel</span></span>
<span class="line"><span style="color:#B07D48;">describe</span><span style="color:#999999;">.</span><span style="color:#59873A;">concurrent</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">suite</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">test</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">concurrent test 1</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">/* ... */</span><span style="color:#393A34;"> </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">test</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">concurrent test 2</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">/* ... */</span><span style="color:#393A34;"> </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">test</span><span style="color:#999999;">.</span><span style="color:#59873A;">concurrent</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">concurrent test 3</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">/* ... */</span><span style="color:#393A34;"> </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div><p><code>.skip</code>, <code>.only</code>, and <code>.todo</code> works with concurrent suites. All the following combinations are valid:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#BD976A;">describe</span><span style="color:#666666;">.</span><span style="color:#80A665;">concurrent</span><span style="color:#666666;">(</span><span style="color:#758575DD;">/* ... */</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#BD976A;">describe</span><span style="color:#666666;">.</span><span style="color:#BD976A;">skip</span><span style="color:#666666;">.</span><span style="color:#80A665;">concurrent</span><span style="color:#666666;">(</span><span style="color:#758575DD;">/* ... */</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// or describe.concurrent.skip(/* ... */)</span></span>
<span class="line"><span style="color:#BD976A;">describe</span><span style="color:#666666;">.</span><span style="color:#BD976A;">only</span><span style="color:#666666;">.</span><span style="color:#80A665;">concurrent</span><span style="color:#666666;">(</span><span style="color:#758575DD;">/* ... */</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// or describe.concurrent.only(/* ... */)</span></span>
<span class="line"><span style="color:#BD976A;">describe</span><span style="color:#666666;">.</span><span style="color:#BD976A;">todo</span><span style="color:#666666;">.</span><span style="color:#80A665;">concurrent</span><span style="color:#666666;">(</span><span style="color:#758575DD;">/* ... */</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// or describe.concurrent.todo(/* ... */)</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#B07D48;">describe</span><span style="color:#999999;">.</span><span style="color:#59873A;">concurrent</span><span style="color:#999999;">(</span><span style="color:#A0ADA0;">/* ... */</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#B07D48;">describe</span><span style="color:#999999;">.</span><span style="color:#B07D48;">skip</span><span style="color:#999999;">.</span><span style="color:#59873A;">concurrent</span><span style="color:#999999;">(</span><span style="color:#A0ADA0;">/* ... */</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// or describe.concurrent.skip(/* ... */)</span></span>
<span class="line"><span style="color:#B07D48;">describe</span><span style="color:#999999;">.</span><span style="color:#B07D48;">only</span><span style="color:#999999;">.</span><span style="color:#59873A;">concurrent</span><span style="color:#999999;">(</span><span style="color:#A0ADA0;">/* ... */</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// or describe.concurrent.only(/* ... */)</span></span>
<span class="line"><span style="color:#B07D48;">describe</span><span style="color:#999999;">.</span><span style="color:#B07D48;">todo</span><span style="color:#999999;">.</span><span style="color:#59873A;">concurrent</span><span style="color:#999999;">(</span><span style="color:#A0ADA0;">/* ... */</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// or describe.concurrent.todo(/* ... */)</span></span></code></pre></div></li></ul><p>When running concurrent tests, Snapshots and Assertions must use <code>expect</code> from the local <a href="/vitest.kr/guide/test-context.html">Test Context</a> to ensure the right test is detected.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#BD976A;">describe</span><span style="color:#666666;">.</span><span style="color:#80A665;">concurrent</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">suite</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">test</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">concurrent test 1</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">({</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expect</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">})</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#80A665;">expect</span><span style="color:#666666;">(</span><span style="color:#BD976A;">foo</span><span style="color:#666666;">).</span><span style="color:#80A665;">toMatchSnapshot</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">test</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">concurrent test 2</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">({</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expect</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">})</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#80A665;">expect</span><span style="color:#666666;">(</span><span style="color:#BD976A;">foo</span><span style="color:#666666;">).</span><span style="color:#80A665;">toMatchSnapshot</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#B07D48;">describe</span><span style="color:#999999;">.</span><span style="color:#59873A;">concurrent</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">suite</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">test</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">concurrent test 1</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#999999;">({</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expect</span><span style="color:#393A34;"> </span><span style="color:#999999;">})</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">expect</span><span style="color:#999999;">(</span><span style="color:#B07D48;">foo</span><span style="color:#999999;">).</span><span style="color:#59873A;">toMatchSnapshot</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">test</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">concurrent test 2</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#999999;">({</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expect</span><span style="color:#393A34;"> </span><span style="color:#999999;">})</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">expect</span><span style="color:#999999;">(</span><span style="color:#B07D48;">foo</span><span style="color:#999999;">).</span><span style="color:#59873A;">toMatchSnapshot</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>You cannot use this syntax, when using Vitest as <a href="/vitest.kr/guide/testing-types.html">type checker</a>.</p></div><h3 id="describe-sequential" tabindex="-1">describe.sequential <a class="header-anchor" href="#describe-sequential" aria-label="Permalink to &quot;describe.sequential&quot;">​</a></h3><ul><li><p><strong>Type:</strong> <code>(name: string | Function, fn: TestFunction, options?: number | TestOptions) =&gt; void</code></p><p><code>describe.sequential</code> in a suite marks every test as sequential. This is useful if you want to run tests in sequential within <code>describe.concurrent</code> or with the <code>--sequence.concurrent</code> command option.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#BD976A;">describe</span><span style="color:#666666;">.</span><span style="color:#80A665;">concurrent</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">suite</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">test</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">concurrent test 1</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">/* ... */</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">test</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">concurrent test 2</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">/* ... */</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">describe</span><span style="color:#666666;">.</span><span style="color:#80A665;">sequential</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#80A665;">test</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">sequential test 1</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">/* ... */</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#80A665;">test</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">sequential test 2</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">/* ... */</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#B07D48;">describe</span><span style="color:#999999;">.</span><span style="color:#59873A;">concurrent</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">suite</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">test</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">concurrent test 1</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">/* ... */</span><span style="color:#393A34;"> </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">test</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">concurrent test 2</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">/* ... */</span><span style="color:#393A34;"> </span><span style="color:#999999;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">describe</span><span style="color:#999999;">.</span><span style="color:#59873A;">sequential</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">test</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">sequential test 1</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">/* ... */</span><span style="color:#393A34;"> </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">test</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">sequential test 2</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">/* ... */</span><span style="color:#393A34;"> </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div></li></ul><h3 id="describe-shuffle" tabindex="-1">describe.shuffle <a class="header-anchor" href="#describe-shuffle" aria-label="Permalink to &quot;describe.shuffle&quot;">​</a></h3><ul><li><p><strong>Type:</strong> <code>(name: string | Function, fn: TestFunction, options?: number | TestOptions) =&gt; void</code></p><p>Vitest provides a way to run all tests in random order via CLI flag <a href="/vitest.kr/guide/cli.html"><code>--sequence.shuffle</code></a> or config option <a href="/vitest.kr/config/#sequence-shuffle"><code>sequence.shuffle</code></a>, but if you want to have only part of your test suite to run tests in random order, you can mark it with this flag.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#BD976A;">describe</span><span style="color:#666666;">.</span><span style="color:#80A665;">shuffle</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">suite</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">test</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">random test 1</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">/* ... */</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">test</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">random test 2</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">/* ... */</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">test</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">random test 3</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">/* ... */</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#758575DD;">// order depends on sequence.seed option in config (Date.now() by default)</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#B07D48;">describe</span><span style="color:#999999;">.</span><span style="color:#59873A;">shuffle</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">suite</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">test</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">random test 1</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">/* ... */</span><span style="color:#393A34;"> </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">test</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">random test 2</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">/* ... */</span><span style="color:#393A34;"> </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">test</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">random test 3</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">/* ... */</span><span style="color:#393A34;"> </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#A0ADA0;">// order depends on sequence.seed option in config (Date.now() by default)</span></span></code></pre></div></li></ul><p><code>.skip</code>, <code>.only</code>, and <code>.todo</code> works with random suites.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>You cannot use this syntax, when using Vitest as <a href="/vitest.kr/guide/testing-types.html">type checker</a>.</p></div><h3 id="describe-todo" tabindex="-1">describe.todo <a class="header-anchor" href="#describe-todo" aria-label="Permalink to &quot;describe.todo&quot;">​</a></h3><ul><li><p><strong>Type:</strong> <code>(name: string | Function) =&gt; void</code></p><p>Use <code>describe.todo</code> to stub suites to be implemented later. An entry will be shown in the report for the tests so you know how many tests you still need to implement.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// An entry will be shown in the report for this suite</span></span>
<span class="line"><span style="color:#BD976A;">describe</span><span style="color:#666666;">.</span><span style="color:#80A665;">todo</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">unimplemented suite</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// An entry will be shown in the report for this suite</span></span>
<span class="line"><span style="color:#B07D48;">describe</span><span style="color:#999999;">.</span><span style="color:#59873A;">todo</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">unimplemented suite</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span></code></pre></div></li></ul><h3 id="describe-each" tabindex="-1">describe.each <a class="header-anchor" href="#describe-each" aria-label="Permalink to &quot;describe.each&quot;">​</a></h3><ul><li><p><strong>Type:</strong> <code>(cases: ReadonlyArray&lt;T&gt;, ...args: any[]): (name: string | Function, fn: (...args: T[]) =&gt; void, options?: number | TestOptions) =&gt; void</code></p><p>Use <code>describe.each</code> if you have more than one test that depends on the same data.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#BD976A;">describe</span><span style="color:#666666;">.</span><span style="color:#80A665;">each</span><span style="color:#666666;">([</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">{ </span><span style="color:#B8A965;">a</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">, </span><span style="color:#B8A965;">b</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">, </span><span style="color:#B8A965;">expected</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">2</span><span style="color:#666666;"> },</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">{ </span><span style="color:#B8A965;">a</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">, </span><span style="color:#B8A965;">b</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">2</span><span style="color:#666666;">, </span><span style="color:#B8A965;">expected</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">3</span><span style="color:#666666;"> },</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">{ </span><span style="color:#B8A965;">a</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">2</span><span style="color:#666666;">, </span><span style="color:#B8A965;">b</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">, </span><span style="color:#B8A965;">expected</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">3</span><span style="color:#666666;"> },</span></span>
<span class="line"><span style="color:#666666;">])(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">describe object add($a, $b)</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">({</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">a</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">b</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expected</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">})</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">test</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">\`</span><span style="color:#C98A7D;">returns </span><span style="color:#666666;">\${</span><span style="color:#C98A7D;">expected</span><span style="color:#666666;">}</span><span style="color:#C98A7D99;">\`</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#80A665;">expect</span><span style="color:#666666;">(</span><span style="color:#BD976A;">a</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">+</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">b</span><span style="color:#666666;">).</span><span style="color:#80A665;">toBe</span><span style="color:#666666;">(</span><span style="color:#BD976A;">expected</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">test</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">\`</span><span style="color:#C98A7D;">returned value not be greater than </span><span style="color:#666666;">\${</span><span style="color:#C98A7D;">expected</span><span style="color:#666666;">}</span><span style="color:#C98A7D99;">\`</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#80A665;">expect</span><span style="color:#666666;">(</span><span style="color:#BD976A;">a</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">+</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">b</span><span style="color:#666666;">).</span><span style="color:#BD976A;">not</span><span style="color:#666666;">.</span><span style="color:#80A665;">toBeGreaterThan</span><span style="color:#666666;">(</span><span style="color:#BD976A;">expected</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">test</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">\`</span><span style="color:#C98A7D;">returned value not be less than </span><span style="color:#666666;">\${</span><span style="color:#C98A7D;">expected</span><span style="color:#666666;">}</span><span style="color:#C98A7D99;">\`</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#80A665;">expect</span><span style="color:#666666;">(</span><span style="color:#BD976A;">a</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">+</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">b</span><span style="color:#666666;">).</span><span style="color:#BD976A;">not</span><span style="color:#666666;">.</span><span style="color:#80A665;">toBeLessThan</span><span style="color:#666666;">(</span><span style="color:#BD976A;">expected</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#B07D48;">describe</span><span style="color:#999999;">.</span><span style="color:#59873A;">each</span><span style="color:#999999;">([</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">{ </span><span style="color:#998418;">a</span><span style="color:#999999;">: </span><span style="color:#2F798A;">1</span><span style="color:#999999;">, </span><span style="color:#998418;">b</span><span style="color:#999999;">: </span><span style="color:#2F798A;">1</span><span style="color:#999999;">, </span><span style="color:#998418;">expected</span><span style="color:#999999;">: </span><span style="color:#2F798A;">2</span><span style="color:#999999;"> },</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">{ </span><span style="color:#998418;">a</span><span style="color:#999999;">: </span><span style="color:#2F798A;">1</span><span style="color:#999999;">, </span><span style="color:#998418;">b</span><span style="color:#999999;">: </span><span style="color:#2F798A;">2</span><span style="color:#999999;">, </span><span style="color:#998418;">expected</span><span style="color:#999999;">: </span><span style="color:#2F798A;">3</span><span style="color:#999999;"> },</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">{ </span><span style="color:#998418;">a</span><span style="color:#999999;">: </span><span style="color:#2F798A;">2</span><span style="color:#999999;">, </span><span style="color:#998418;">b</span><span style="color:#999999;">: </span><span style="color:#2F798A;">1</span><span style="color:#999999;">, </span><span style="color:#998418;">expected</span><span style="color:#999999;">: </span><span style="color:#2F798A;">3</span><span style="color:#999999;"> },</span></span>
<span class="line"><span style="color:#999999;">])(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">describe object add($a, $b)</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">({</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">a</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">b</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expected</span><span style="color:#393A34;"> </span><span style="color:#999999;">})</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">test</span><span style="color:#999999;">(</span><span style="color:#B5695999;">\`</span><span style="color:#B56959;">returns </span><span style="color:#999999;">\${</span><span style="color:#B56959;">expected</span><span style="color:#999999;">}</span><span style="color:#B5695999;">\`</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">expect</span><span style="color:#999999;">(</span><span style="color:#B07D48;">a</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">+</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">b</span><span style="color:#999999;">).</span><span style="color:#59873A;">toBe</span><span style="color:#999999;">(</span><span style="color:#B07D48;">expected</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">test</span><span style="color:#999999;">(</span><span style="color:#B5695999;">\`</span><span style="color:#B56959;">returned value not be greater than </span><span style="color:#999999;">\${</span><span style="color:#B56959;">expected</span><span style="color:#999999;">}</span><span style="color:#B5695999;">\`</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">expect</span><span style="color:#999999;">(</span><span style="color:#B07D48;">a</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">+</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">b</span><span style="color:#999999;">).</span><span style="color:#B07D48;">not</span><span style="color:#999999;">.</span><span style="color:#59873A;">toBeGreaterThan</span><span style="color:#999999;">(</span><span style="color:#B07D48;">expected</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">test</span><span style="color:#999999;">(</span><span style="color:#B5695999;">\`</span><span style="color:#B56959;">returned value not be less than </span><span style="color:#999999;">\${</span><span style="color:#B56959;">expected</span><span style="color:#999999;">}</span><span style="color:#B5695999;">\`</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">expect</span><span style="color:#999999;">(</span><span style="color:#B07D48;">a</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">+</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">b</span><span style="color:#999999;">).</span><span style="color:#B07D48;">not</span><span style="color:#999999;">.</span><span style="color:#59873A;">toBeLessThan</span><span style="color:#999999;">(</span><span style="color:#B07D48;">expected</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div><p>Starting from Vitest 0.25.3, you can also use template string table.</p><ul><li>First row should be column names, separated by <code>|</code>;</li><li>One or more subsequent rows of data supplied as template literal expressions using <code>\${value}</code> syntax.</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#BD976A;">describe</span><span style="color:#666666;">.</span><span style="color:#80A665;">each</span><span style="color:#C98A7D99;">\`</span></span>
<span class="line"><span style="color:#C98A7D;">  a               | b      | expected</span></span>
<span class="line"><span style="color:#C98A7D;">  </span><span style="color:#666666;">\${</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">}</span><span style="color:#C98A7D;">            | </span><span style="color:#666666;">\${</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">}</span><span style="color:#C98A7D;">   | </span><span style="color:#666666;">\${</span><span style="color:#4C9A91;">2</span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#C98A7D;">  </span><span style="color:#666666;">\${</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">a</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">}</span><span style="color:#C98A7D;">          | </span><span style="color:#666666;">\${</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">b</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">}</span><span style="color:#C98A7D;"> | </span><span style="color:#666666;">\${</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">ab</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#C98A7D;">  </span><span style="color:#666666;">\${</span><span style="color:#666666;">[]</span><span style="color:#666666;">}</span><span style="color:#C98A7D;">           | </span><span style="color:#666666;">\${</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">b</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">}</span><span style="color:#C98A7D;"> | </span><span style="color:#666666;">\${</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">b</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#C98A7D;">  </span><span style="color:#666666;">\${</span><span style="color:#666666;">{}</span><span style="color:#666666;">}</span><span style="color:#C98A7D;">           | </span><span style="color:#666666;">\${</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">b</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">}</span><span style="color:#C98A7D;"> | </span><span style="color:#666666;">\${</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">[object Object]b</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#C98A7D;">  </span><span style="color:#666666;">\${</span><span style="color:#666666;">{ </span><span style="color:#B8A965;">asd</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">1</span><span style="color:#666666;"> }</span><span style="color:#666666;">}</span><span style="color:#C98A7D;">   | </span><span style="color:#666666;">\${</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">b</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">}</span><span style="color:#C98A7D;"> | </span><span style="color:#666666;">\${</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">[object Object]b</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#C98A7D99;">\`</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">describe template string add($a, $b)</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">({</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">a</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">b</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expected</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">})</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">test</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">\`</span><span style="color:#C98A7D;">returns </span><span style="color:#666666;">\${</span><span style="color:#C98A7D;">expected</span><span style="color:#666666;">}</span><span style="color:#C98A7D99;">\`</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#80A665;">expect</span><span style="color:#666666;">(</span><span style="color:#BD976A;">a</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">+</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">b</span><span style="color:#666666;">).</span><span style="color:#80A665;">toBe</span><span style="color:#666666;">(</span><span style="color:#BD976A;">expected</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#B07D48;">describe</span><span style="color:#999999;">.</span><span style="color:#59873A;">each</span><span style="color:#B5695999;">\`</span></span>
<span class="line"><span style="color:#B56959;">  a               | b      | expected</span></span>
<span class="line"><span style="color:#B56959;">  </span><span style="color:#999999;">\${</span><span style="color:#2F798A;">1</span><span style="color:#999999;">}</span><span style="color:#B56959;">            | </span><span style="color:#999999;">\${</span><span style="color:#2F798A;">1</span><span style="color:#999999;">}</span><span style="color:#B56959;">   | </span><span style="color:#999999;">\${</span><span style="color:#2F798A;">2</span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#B56959;">  </span><span style="color:#999999;">\${</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">a</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">}</span><span style="color:#B56959;">          | </span><span style="color:#999999;">\${</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">b</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">}</span><span style="color:#B56959;"> | </span><span style="color:#999999;">\${</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">ab</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#B56959;">  </span><span style="color:#999999;">\${</span><span style="color:#999999;">[]</span><span style="color:#999999;">}</span><span style="color:#B56959;">           | </span><span style="color:#999999;">\${</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">b</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">}</span><span style="color:#B56959;"> | </span><span style="color:#999999;">\${</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">b</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#B56959;">  </span><span style="color:#999999;">\${</span><span style="color:#999999;">{}</span><span style="color:#999999;">}</span><span style="color:#B56959;">           | </span><span style="color:#999999;">\${</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">b</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">}</span><span style="color:#B56959;"> | </span><span style="color:#999999;">\${</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">[object Object]b</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#B56959;">  </span><span style="color:#999999;">\${</span><span style="color:#999999;">{ </span><span style="color:#998418;">asd</span><span style="color:#999999;">: </span><span style="color:#2F798A;">1</span><span style="color:#999999;"> }</span><span style="color:#999999;">}</span><span style="color:#B56959;">   | </span><span style="color:#999999;">\${</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">b</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">}</span><span style="color:#B56959;"> | </span><span style="color:#999999;">\${</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">[object Object]b</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#B5695999;">\`</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">describe template string add($a, $b)</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">({</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">a</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">b</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expected</span><span style="color:#393A34;"> </span><span style="color:#999999;">})</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">test</span><span style="color:#999999;">(</span><span style="color:#B5695999;">\`</span><span style="color:#B56959;">returns </span><span style="color:#999999;">\${</span><span style="color:#B56959;">expected</span><span style="color:#999999;">}</span><span style="color:#B5695999;">\`</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">expect</span><span style="color:#999999;">(</span><span style="color:#B07D48;">a</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">+</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">b</span><span style="color:#999999;">).</span><span style="color:#59873A;">toBe</span><span style="color:#999999;">(</span><span style="color:#B07D48;">expected</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div></li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>You cannot use this syntax, when using Vitest as <a href="/vitest.kr/guide/testing-types.html">type checker</a>.</p></div><h2 id="setup-and-teardown" tabindex="-1">Setup and Teardown <a class="header-anchor" href="#setup-and-teardown" aria-label="Permalink to &quot;Setup and Teardown&quot;">​</a></h2><p>These functions allow you to hook into the life cycle of tests to avoid repeating setup and teardown code. They apply to the current context: the file if they are used at the top-level or the current suite if they are inside a <code>describe</code> block. These hooks are not called, when you are running Vitest as a type checker.</p><h3 id="beforeeach" tabindex="-1">beforeEach <a class="header-anchor" href="#beforeeach" aria-label="Permalink to &quot;beforeEach&quot;">​</a></h3><ul><li><p><strong>Type:</strong> <code>beforeEach(fn: () =&gt; Awaitable&lt;void&gt;, timeout?: number)</code></p><p>Register a callback to be called before each of the tests in the current context runs. If the function returns a promise, Vitest waits until the promise resolve before running the test.</p><p>Optionally, you can pass a timeout (in milliseconds) defining how long to wait before terminating. The default is 5 seconds.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">beforeEach</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">beforeEach</span><span style="color:#666666;">(</span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// Clear mocks and add some testing data after before each test run</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">await</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">stopMocking</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">await</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">addUser</span><span style="color:#666666;">({ </span><span style="color:#B8A965;">name</span><span style="color:#666666;">: </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">John</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;"> })</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">beforeEach</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">beforeEach</span><span style="color:#999999;">(</span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// Clear mocks and add some testing data after before each test run</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#59873A;">stopMocking</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#59873A;">addUser</span><span style="color:#999999;">({ </span><span style="color:#998418;">name</span><span style="color:#999999;">: </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">John</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;"> })</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div><p>Here, the <code>beforeEach</code> ensures that user is added for each test.</p><p>Since Vitest v0.10.0, <code>beforeEach</code> also accepts an optional cleanup function (equivalent to <code>afterEach</code>).</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">beforeEach</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">beforeEach</span><span style="color:#666666;">(</span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// called once before each test run</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">await</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">prepareSomething</span><span style="color:#666666;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// clean up function, called once after each test run</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">await</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">resetSomething</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">beforeEach</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">beforeEach</span><span style="color:#999999;">(</span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// called once before each test run</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#59873A;">prepareSomething</span><span style="color:#999999;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// clean up function, called once after each test run</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#59873A;">resetSomething</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div></li></ul><h3 id="aftereach" tabindex="-1">afterEach <a class="header-anchor" href="#aftereach" aria-label="Permalink to &quot;afterEach&quot;">​</a></h3><ul><li><p><strong>Type:</strong> <code>afterEach(fn: () =&gt; Awaitable&lt;void&gt;, timeout?: number)</code></p><p>Register a callback to be called after each one of the tests in the current context completes. If the function returns a promise, Vitest waits until the promise resolve before continuing.</p><p>Optionally, you can provide a timeout (in milliseconds) for specifying how long to wait before terminating. The default is 5 seconds.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">afterEach</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">afterEach</span><span style="color:#666666;">(</span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">await</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">clearTestingData</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// clear testing data after each test run</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">afterEach</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">afterEach</span><span style="color:#999999;">(</span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#59873A;">clearTestingData</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// clear testing data after each test run</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div><p>Here, the <code>afterEach</code> ensures that testing data is cleared after each test runs.</p></li></ul><h3 id="beforeall" tabindex="-1">beforeAll <a class="header-anchor" href="#beforeall" aria-label="Permalink to &quot;beforeAll&quot;">​</a></h3><ul><li><p><strong>Type:</strong> <code>beforeAll(fn: () =&gt; Awaitable&lt;void&gt;, timeout?: number)</code></p><p>Register a callback to be called once before starting to run all tests in the current context. If the function returns a promise, Vitest waits until the promise resolve before running tests.</p><p>Optionally, you can provide a timeout (in milliseconds) for specifying how long to wait before terminating. The default is 5 seconds.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">beforeAll</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">beforeAll</span><span style="color:#666666;">(</span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">await</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">startMocking</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// called once before all tests run</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">beforeAll</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">beforeAll</span><span style="color:#999999;">(</span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#59873A;">startMocking</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// called once before all tests run</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div><p>Here the <code>beforeAll</code> ensures that the mock data is set up before tests run.</p><p>Since Vitest v0.10.0, <code>beforeAll</code> also accepts an optional cleanup function (equivalent to <code>afterAll</code>).</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">beforeAll</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">beforeAll</span><span style="color:#666666;">(</span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// called once before all tests run</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">await</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">startMocking</span><span style="color:#666666;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// clean up function, called once after all tests run</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">await</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">stopMocking</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">beforeAll</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">beforeAll</span><span style="color:#999999;">(</span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// called once before all tests run</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#59873A;">startMocking</span><span style="color:#999999;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// clean up function, called once after all tests run</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#59873A;">stopMocking</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div></li></ul><h3 id="afterall" tabindex="-1">afterAll <a class="header-anchor" href="#afterall" aria-label="Permalink to &quot;afterAll&quot;">​</a></h3><ul><li><p><strong>Type:</strong> <code>afterAll(fn: () =&gt; Awaitable&lt;void&gt;, timeout?: number)</code></p><p>Register a callback to be called once after all tests have run in the current context. If the function returns a promise, Vitest waits until the promise resolve before continuing.</p><p>Optionally, you can provide a timeout (in milliseconds) for specifying how long to wait before terminating. The default is 5 seconds.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">afterAll</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">afterAll</span><span style="color:#666666;">(</span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">await</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">stopMocking</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// this method is called after all tests run</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">afterAll</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">afterAll</span><span style="color:#999999;">(</span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#59873A;">stopMocking</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// this method is called after all tests run</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div><p>Here the <code>afterAll</code> ensures that <code>stopMocking</code> method is called after all tests run.</p></li></ul>`,88),e=[o];function t(c,r,y,A,i,D){return n(),a("div",null,e)}const E=s(p,[["render",t]]);export{d as __pageData,E as default};
