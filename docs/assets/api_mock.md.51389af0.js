import{_ as s,j as n,k as a,V as l}from"./chunks/framework.cf42e605.js";const d=JSON.parse('{"title":"Mock Functions","description":"","frontmatter":{},"headers":[],"relativePath":"api/mock.md","filePath":"api/mock.md","lastUpdated":1689061844000}'),o={name:"api/mock.md"},p=l(`<h1 id="mock-functions" tabindex="-1">Mock Functions <a class="header-anchor" href="#mock-functions" aria-label="Permalink to &quot;Mock Functions&quot;">​</a></h1><p>You can create a spy function (mock) to track its execution with <code>vi.fn</code> method. If you want to track a method on an already created object, you can use <code>vi.spyOn</code> method:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">vi</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">fn</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">vi</span><span style="color:#666666;">.</span><span style="color:#80A665;">fn</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#80A665;">fn</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">hello world</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#BD976A;">fn</span><span style="color:#666666;">.</span><span style="color:#BD976A;">mock</span><span style="color:#666666;">.</span><span style="color:#BD976A;">calls</span><span style="color:#666666;">[</span><span style="color:#4C9A91;">0</span><span style="color:#666666;">]</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">===</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">hello world</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">market</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">getApples</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">100</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">getApplesSpy</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">vi</span><span style="color:#666666;">.</span><span style="color:#80A665;">spyOn</span><span style="color:#666666;">(</span><span style="color:#BD976A;">market</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">getApples</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#BD976A;">market</span><span style="color:#666666;">.</span><span style="color:#80A665;">getApples</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#BD976A;">getApplesSpy</span><span style="color:#666666;">.</span><span style="color:#BD976A;">mock</span><span style="color:#666666;">.</span><span style="color:#BD976A;">calls</span><span style="color:#666666;">.</span><span style="color:#B8A965;">length</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">===</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">1</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">vi</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">fn</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">vi</span><span style="color:#999999;">.</span><span style="color:#59873A;">fn</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#59873A;">fn</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">hello world</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#B07D48;">fn</span><span style="color:#999999;">.</span><span style="color:#B07D48;">mock</span><span style="color:#999999;">.</span><span style="color:#B07D48;">calls</span><span style="color:#999999;">[</span><span style="color:#2F798A;">0</span><span style="color:#999999;">]</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">===</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">hello world</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">market</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">getApples</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">100</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">getApplesSpy</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">vi</span><span style="color:#999999;">.</span><span style="color:#59873A;">spyOn</span><span style="color:#999999;">(</span><span style="color:#B07D48;">market</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">getApples</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#B07D48;">market</span><span style="color:#999999;">.</span><span style="color:#59873A;">getApples</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#B07D48;">getApplesSpy</span><span style="color:#999999;">.</span><span style="color:#B07D48;">mock</span><span style="color:#999999;">.</span><span style="color:#B07D48;">calls</span><span style="color:#999999;">.</span><span style="color:#998418;">length</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">===</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">1</span></span></code></pre></div><p>You should use spy assertions (e.g., <a href="/api/expect.html#tohavebeencalled"><code>toHaveBeenCalled</code></a>) on <a href="/api/expect.html"><code>expect</code></a> to assert spy result. This API reference describes available properties and methods to manipulate spy behavior.</p><h2 id="getmockname" tabindex="-1">getMockName <a class="header-anchor" href="#getmockname" aria-label="Permalink to &quot;getMockName&quot;">​</a></h2><ul><li><p><strong>Type:</strong> <code>() =&gt; string</code></p><p>Use it to return the name given to mock with method <code>.mockName(name)</code>.</p></li></ul><h2 id="mockclear" tabindex="-1">mockClear <a class="header-anchor" href="#mockclear" aria-label="Permalink to &quot;mockClear&quot;">​</a></h2><ul><li><p><strong>Type:</strong> <code>() =&gt; MockInstance</code></p><p>Clears all information about every call. After calling it, <a href="#mock-calls"><code>spy.mock.calls</code></a>, <a href="#mock-results"><code>spy.mock.results</code></a> will return empty arrays. It is useful if you need to clean up spy between different assertions.</p><p>If you want this method to be called before each test automatically, you can enable <a href="/config/#clearmocks"><code>clearMocks</code></a> setting in config.</p></li></ul><h2 id="mockname" tabindex="-1">mockName <a class="header-anchor" href="#mockname" aria-label="Permalink to &quot;mockName&quot;">​</a></h2><ul><li><p><strong>Type:</strong> <code>(name: string) =&gt; MockInstance</code></p><p>Sets internal mock name. Useful to see what mock has failed the assertion.</p></li></ul><h2 id="mockimplementation" tabindex="-1">mockImplementation <a class="header-anchor" href="#mockimplementation" aria-label="Permalink to &quot;mockImplementation&quot;">​</a></h2><ul><li><p><strong>Type:</strong> <code>(fn: Function) =&gt; MockInstance</code></p><p>Accepts a function that will be used as an implementation of the mock.</p><p>For example:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">mockFn</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">vi</span><span style="color:#666666;">.</span><span style="color:#80A665;">fn</span><span style="color:#666666;">().</span><span style="color:#80A665;">mockImplementation</span><span style="color:#666666;">(</span><span style="color:#BD976A;">apples</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">apples</span><span style="color:#CB7676;"> + </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#758575DD;">// or: vi.fn(apples =&gt; apples + 1);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">NelliesBucket</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#80A665;">mockFn</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">0</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">BobsBucket</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#80A665;">mockFn</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD976A;">NelliesBucket</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">===</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">1</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// true</span></span>
<span class="line"><span style="color:#BD976A;">BobsBucket</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">===</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">2</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD976A;">mockFn</span><span style="color:#666666;">.</span><span style="color:#BD976A;">mock</span><span style="color:#666666;">.</span><span style="color:#BD976A;">calls</span><span style="color:#666666;">[</span><span style="color:#4C9A91;">0</span><span style="color:#666666;">][</span><span style="color:#4C9A91;">0</span><span style="color:#666666;">]</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">===</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">0</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// true</span></span>
<span class="line"><span style="color:#BD976A;">mockFn</span><span style="color:#666666;">.</span><span style="color:#BD976A;">mock</span><span style="color:#666666;">.</span><span style="color:#BD976A;">calls</span><span style="color:#666666;">[</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">][</span><span style="color:#4C9A91;">0</span><span style="color:#666666;">]</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">===</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">1</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// true</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">mockFn</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">vi</span><span style="color:#999999;">.</span><span style="color:#59873A;">fn</span><span style="color:#999999;">().</span><span style="color:#59873A;">mockImplementation</span><span style="color:#999999;">(</span><span style="color:#B07D48;">apples</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">apples</span><span style="color:#AB5959;"> + </span><span style="color:#2F798A;">1</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#A0ADA0;">// or: vi.fn(apples =&gt; apples + 1);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">NelliesBucket</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#59873A;">mockFn</span><span style="color:#999999;">(</span><span style="color:#2F798A;">0</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">BobsBucket</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#59873A;">mockFn</span><span style="color:#999999;">(</span><span style="color:#2F798A;">1</span><span style="color:#999999;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B07D48;">NelliesBucket</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">===</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">1</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// true</span></span>
<span class="line"><span style="color:#B07D48;">BobsBucket</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">===</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">2</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B07D48;">mockFn</span><span style="color:#999999;">.</span><span style="color:#B07D48;">mock</span><span style="color:#999999;">.</span><span style="color:#B07D48;">calls</span><span style="color:#999999;">[</span><span style="color:#2F798A;">0</span><span style="color:#999999;">][</span><span style="color:#2F798A;">0</span><span style="color:#999999;">]</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">===</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">0</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// true</span></span>
<span class="line"><span style="color:#B07D48;">mockFn</span><span style="color:#999999;">.</span><span style="color:#B07D48;">mock</span><span style="color:#999999;">.</span><span style="color:#B07D48;">calls</span><span style="color:#999999;">[</span><span style="color:#2F798A;">1</span><span style="color:#999999;">][</span><span style="color:#2F798A;">0</span><span style="color:#999999;">]</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">===</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">1</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// true</span></span></code></pre></div></li></ul><h2 id="mockimplementationonce" tabindex="-1">mockImplementationOnce <a class="header-anchor" href="#mockimplementationonce" aria-label="Permalink to &quot;mockImplementationOnce&quot;">​</a></h2><ul><li><p><strong>Type:</strong> <code>(fn: Function) =&gt; MockInstance</code></p><p>Accepts a function that will be used as an implementation of the mock for one call to the mocked function. Can be chained so that multiple function calls produce different results.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">myMockFn</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">vi</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">fn</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">mockImplementationOnce</span><span style="color:#666666;">(()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">true</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">mockImplementationOnce</span><span style="color:#666666;">(()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">false</span><span style="color:#666666;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">myMockFn</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// true</span></span>
<span class="line"><span style="color:#80A665;">myMockFn</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// false</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">myMockFn</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">vi</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">fn</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">mockImplementationOnce</span><span style="color:#999999;">(()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">true</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">mockImplementationOnce</span><span style="color:#999999;">(()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">false</span><span style="color:#999999;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">myMockFn</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// true</span></span>
<span class="line"><span style="color:#59873A;">myMockFn</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// false</span></span></code></pre></div><p>When the mocked function runs out of implementations, it will invoke the default implementation that was set with <code>vi.fn(() =&gt; defaultValue)</code> or <code>.mockImplementation(() =&gt; defaultValue)</code> if they were called:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">myMockFn</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">vi</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">fn</span><span style="color:#666666;">(()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">default</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">mockImplementationOnce</span><span style="color:#666666;">(()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">first call</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">mockImplementationOnce</span><span style="color:#666666;">(()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">second call</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// &#39;first call&#39;, &#39;second call&#39;, &#39;default&#39;, &#39;default&#39;</span></span>
<span class="line"><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#80A665;">myMockFn</span><span style="color:#666666;">(),</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">myMockFn</span><span style="color:#666666;">(),</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">myMockFn</span><span style="color:#666666;">(),</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">myMockFn</span><span style="color:#666666;">())</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">myMockFn</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">vi</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">fn</span><span style="color:#999999;">(()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">default</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">mockImplementationOnce</span><span style="color:#999999;">(()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">first call</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">mockImplementationOnce</span><span style="color:#999999;">(()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">second call</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// &#39;first call&#39;, &#39;second call&#39;, &#39;default&#39;, &#39;default&#39;</span></span>
<span class="line"><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#59873A;">myMockFn</span><span style="color:#999999;">(),</span><span style="color:#393A34;"> </span><span style="color:#59873A;">myMockFn</span><span style="color:#999999;">(),</span><span style="color:#393A34;"> </span><span style="color:#59873A;">myMockFn</span><span style="color:#999999;">(),</span><span style="color:#393A34;"> </span><span style="color:#59873A;">myMockFn</span><span style="color:#999999;">())</span></span></code></pre></div></li></ul><h2 id="withimplementation" tabindex="-1">withImplementation <a class="header-anchor" href="#withimplementation" aria-label="Permalink to &quot;withImplementation&quot;">​</a></h2><ul><li><p><strong>Type:</strong> <code>(fn: Function, callback: () =&gt; void) =&gt; MockInstance</code></p></li><li><p><strong>Type:</strong> <code>(fn: Function, callback: () =&gt; Promise&lt;unknown&gt;) =&gt; Promise&lt;MockInstance&gt;</code></p><p>Overrides the original mock implementation temporarily while the callback is being executed.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">myMockFn</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">vi</span><span style="color:#666666;">.</span><span style="color:#80A665;">fn</span><span style="color:#666666;">(()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">original</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD976A;">myMockFn</span><span style="color:#666666;">.</span><span style="color:#80A665;">withImplementation</span><span style="color:#666666;">(()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">temp</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">myMockFn</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// &#39;temp&#39;</span></span>
<span class="line"><span style="color:#666666;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">myMockFn</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// &#39;original&#39;</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">myMockFn</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">vi</span><span style="color:#999999;">.</span><span style="color:#59873A;">fn</span><span style="color:#999999;">(()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">original</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B07D48;">myMockFn</span><span style="color:#999999;">.</span><span style="color:#59873A;">withImplementation</span><span style="color:#999999;">(()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">temp</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">myMockFn</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// &#39;temp&#39;</span></span>
<span class="line"><span style="color:#999999;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">myMockFn</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// &#39;original&#39;</span></span></code></pre></div><p>Can be used with an asynchronous callback. The method has to be awaited to use the original implementation afterward.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#80A665;">test</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">async callback</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">myMockFn</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">vi</span><span style="color:#666666;">.</span><span style="color:#80A665;">fn</span><span style="color:#666666;">(()</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#CB7676;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">original</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// We await this call since the callback is async</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">await</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">myMockFn</span><span style="color:#666666;">.</span><span style="color:#80A665;">withImplementation</span><span style="color:#666666;">(</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">temp</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#80A665;">myMockFn</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// &#39;temp&#39;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">},</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">myMockFn</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// &#39;original&#39;</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#59873A;">test</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">async callback</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">myMockFn</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">vi</span><span style="color:#999999;">.</span><span style="color:#59873A;">fn</span><span style="color:#999999;">(()</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#AB5959;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">original</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// We await this call since the callback is async</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">myMockFn</span><span style="color:#999999;">.</span><span style="color:#59873A;">withImplementation</span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">temp</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#59873A;">myMockFn</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// &#39;temp&#39;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">},</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">myMockFn</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// &#39;original&#39;</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div><p>Also, it takes precedence over the <a href="https://vitest.dev/api/mock.html#mockimplementationonce" target="_blank" rel="noreferrer"><code>mockImplementationOnce</code></a>.</p></li></ul><h2 id="mockrejectedvalue" tabindex="-1">mockRejectedValue <a class="header-anchor" href="#mockrejectedvalue" aria-label="Permalink to &quot;mockRejectedValue&quot;">​</a></h2><ul><li><p><strong>Type:</strong> <code>(value: any) =&gt; MockInstance</code></p><p>Accepts an error that will be rejected, when async function will be called.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">asyncMock</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">vi</span><span style="color:#666666;">.</span><span style="color:#80A665;">fn</span><span style="color:#666666;">().</span><span style="color:#80A665;">mockRejectedValue</span><span style="color:#666666;">(</span><span style="color:#CB7676;">new </span><span style="color:#80A665;">Error</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">Async error</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4D9375;">await</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">asyncMock</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// throws &quot;Async error&quot;</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">asyncMock</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">vi</span><span style="color:#999999;">.</span><span style="color:#59873A;">fn</span><span style="color:#999999;">().</span><span style="color:#59873A;">mockRejectedValue</span><span style="color:#999999;">(</span><span style="color:#AB5959;">new </span><span style="color:#59873A;">Error</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">Async error</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#59873A;">asyncMock</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// throws &quot;Async error&quot;</span></span></code></pre></div></li></ul><h2 id="mockrejectedvalueonce" tabindex="-1">mockRejectedValueOnce <a class="header-anchor" href="#mockrejectedvalueonce" aria-label="Permalink to &quot;mockRejectedValueOnce&quot;">​</a></h2><ul><li><p><strong>Type:</strong> <code>(value: any) =&gt; MockInstance</code></p><p>Accepts a value that will be rejected for one call to the mock function. If chained, every consecutive call will reject passed value.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">asyncMock</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">vi</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">fn</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">mockResolvedValueOnce</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">first call</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">mockRejectedValueOnce</span><span style="color:#666666;">(</span><span style="color:#CB7676;">new</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">Error</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">Async error</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4D9375;">await</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">asyncMock</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// first call</span></span>
<span class="line"><span style="color:#4D9375;">await</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">asyncMock</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// throws &quot;Async error&quot;</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">asyncMock</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">vi</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">fn</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">mockResolvedValueOnce</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">first call</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">mockRejectedValueOnce</span><span style="color:#999999;">(</span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#59873A;">Error</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">Async error</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#59873A;">asyncMock</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// first call</span></span>
<span class="line"><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#59873A;">asyncMock</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// throws &quot;Async error&quot;</span></span></code></pre></div></li></ul><h2 id="mockreset" tabindex="-1">mockReset <a class="header-anchor" href="#mockreset" aria-label="Permalink to &quot;mockReset&quot;">​</a></h2><ul><li><p><strong>Type:</strong> <code>() =&gt; MockInstance</code></p><p>Does what <code>mockClear</code> does and makes inner implementation an empty function (returning <code>undefined</code>, when invoked). This is useful when you want to completely reset a mock back to its initial state.</p><p>If you want this method to be called before each test automatically, you can enable <a href="/config/#mockreset"><code>mockReset</code></a> setting in config.</p></li></ul><h2 id="mockrestore" tabindex="-1">mockRestore <a class="header-anchor" href="#mockrestore" aria-label="Permalink to &quot;mockRestore&quot;">​</a></h2><ul><li><p><strong>Type:</strong> <code>() =&gt; MockInstance</code></p><p>Does what <code>mockReset</code> does and restores inner implementation to the original function.</p><p>Note that restoring mock from <code>vi.fn()</code> will set implementation to an empty function that returns <code>undefined</code>. Restoring a <code>vi.fn(impl)</code> will restore implementation to <code>impl</code>.</p><p>If you want this method to be called before each test automatically, you can enable <a href="/config/#restoreMocks"><code>restoreMocks</code></a> setting in config.</p></li></ul><h2 id="mockresolvedvalue" tabindex="-1">mockResolvedValue <a class="header-anchor" href="#mockresolvedvalue" aria-label="Permalink to &quot;mockResolvedValue&quot;">​</a></h2><ul><li><p><strong>Type:</strong> <code>(value: any) =&gt; MockInstance</code></p><p>Accepts a value that will be resolved, when async function will be called.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">asyncMock</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">vi</span><span style="color:#666666;">.</span><span style="color:#80A665;">fn</span><span style="color:#666666;">().</span><span style="color:#80A665;">mockResolvedValue</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">43</span><span style="color:#666666;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4D9375;">await</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">asyncMock</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 43</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">asyncMock</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">vi</span><span style="color:#999999;">.</span><span style="color:#59873A;">fn</span><span style="color:#999999;">().</span><span style="color:#59873A;">mockResolvedValue</span><span style="color:#999999;">(</span><span style="color:#2F798A;">43</span><span style="color:#999999;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#59873A;">asyncMock</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 43</span></span></code></pre></div></li></ul><h2 id="mockresolvedvalueonce" tabindex="-1">mockResolvedValueOnce <a class="header-anchor" href="#mockresolvedvalueonce" aria-label="Permalink to &quot;mockResolvedValueOnce&quot;">​</a></h2><ul><li><p><strong>Type:</strong> <code>(value: any) =&gt; MockInstance</code></p><p>Accepts a value that will be resolved for one call to the mock function. If chained, every consecutive call will resolve passed value.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">asyncMock</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">vi</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">fn</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">mockResolvedValue</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">default</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">mockResolvedValueOnce</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">first call</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">mockResolvedValueOnce</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">second call</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4D9375;">await</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">asyncMock</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// first call</span></span>
<span class="line"><span style="color:#4D9375;">await</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">asyncMock</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// second call</span></span>
<span class="line"><span style="color:#4D9375;">await</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">asyncMock</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// default</span></span>
<span class="line"><span style="color:#4D9375;">await</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">asyncMock</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// default</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">asyncMock</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">vi</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">fn</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">mockResolvedValue</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">default</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">mockResolvedValueOnce</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">first call</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">mockResolvedValueOnce</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">second call</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#59873A;">asyncMock</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// first call</span></span>
<span class="line"><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#59873A;">asyncMock</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// second call</span></span>
<span class="line"><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#59873A;">asyncMock</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// default</span></span>
<span class="line"><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#59873A;">asyncMock</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// default</span></span></code></pre></div></li></ul><h2 id="mockreturnthis" tabindex="-1">mockReturnThis <a class="header-anchor" href="#mockreturnthis" aria-label="Permalink to &quot;mockReturnThis&quot;">​</a></h2><ul><li><p><strong>Type:</strong> <code>() =&gt; MockInstance</code></p><p>Sets inner implementation to return <code>this</code> context.</p></li></ul><h2 id="mockreturnvalue" tabindex="-1">mockReturnValue <a class="header-anchor" href="#mockreturnvalue" aria-label="Permalink to &quot;mockReturnValue&quot;">​</a></h2><ul><li><p><strong>Type:</strong> <code>(value: any) =&gt; MockInstance</code></p><p>Accepts a value that will be returned whenever the mock function is called.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">mock</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">vi</span><span style="color:#666666;">.</span><span style="color:#80A665;">fn</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#BD976A;">mock</span><span style="color:#666666;">.</span><span style="color:#80A665;">mockReturnValue</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">42</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#80A665;">mock</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 42</span></span>
<span class="line"><span style="color:#BD976A;">mock</span><span style="color:#666666;">.</span><span style="color:#80A665;">mockReturnValue</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">43</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#80A665;">mock</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 43</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">mock</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">vi</span><span style="color:#999999;">.</span><span style="color:#59873A;">fn</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#B07D48;">mock</span><span style="color:#999999;">.</span><span style="color:#59873A;">mockReturnValue</span><span style="color:#999999;">(</span><span style="color:#2F798A;">42</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#59873A;">mock</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 42</span></span>
<span class="line"><span style="color:#B07D48;">mock</span><span style="color:#999999;">.</span><span style="color:#59873A;">mockReturnValue</span><span style="color:#999999;">(</span><span style="color:#2F798A;">43</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#59873A;">mock</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 43</span></span></code></pre></div></li></ul><h2 id="mockreturnvalueonce" tabindex="-1">mockReturnValueOnce <a class="header-anchor" href="#mockreturnvalueonce" aria-label="Permalink to &quot;mockReturnValueOnce&quot;">​</a></h2><ul><li><p><strong>Type:</strong> <code>(value: any) =&gt; MockInstance</code></p><p>Accepts a value that will be returned for one call to the mock function. If chained, every consecutive call will return the passed value. When there are no more <code>mockReturnValueOnce</code> values to use, call a function specified by <code>mockImplementation</code> or other <code>mockReturn*</code> methods.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">myMockFn</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">vi</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">fn</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">mockReturnValue</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">default</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">mockReturnValueOnce</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">first call</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">mockReturnValueOnce</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">second call</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// &#39;first call&#39;, &#39;second call&#39;, &#39;default&#39;, &#39;default&#39;</span></span>
<span class="line"><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#80A665;">myMockFn</span><span style="color:#666666;">(),</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">myMockFn</span><span style="color:#666666;">(),</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">myMockFn</span><span style="color:#666666;">(),</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">myMockFn</span><span style="color:#666666;">())</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">myMockFn</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">vi</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">fn</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">mockReturnValue</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">default</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">mockReturnValueOnce</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">first call</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">mockReturnValueOnce</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">second call</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// &#39;first call&#39;, &#39;second call&#39;, &#39;default&#39;, &#39;default&#39;</span></span>
<span class="line"><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#59873A;">myMockFn</span><span style="color:#999999;">(),</span><span style="color:#393A34;"> </span><span style="color:#59873A;">myMockFn</span><span style="color:#999999;">(),</span><span style="color:#393A34;"> </span><span style="color:#59873A;">myMockFn</span><span style="color:#999999;">(),</span><span style="color:#393A34;"> </span><span style="color:#59873A;">myMockFn</span><span style="color:#999999;">())</span></span></code></pre></div></li></ul><h2 id="mock-calls" tabindex="-1">mock.calls <a class="header-anchor" href="#mock-calls" aria-label="Permalink to &quot;mock.calls&quot;">​</a></h2><p>This is an array containing all arguments for each call. One item of the array is the arguments of that call.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">fn</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">vi</span><span style="color:#666666;">.</span><span style="color:#80A665;">fn</span><span style="color:#666666;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">fn</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">arg1</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">arg2</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#80A665;">fn</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">arg3</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">arg4</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD976A;">fn</span><span style="color:#666666;">.</span><span style="color:#BD976A;">mock</span><span style="color:#666666;">.</span><span style="color:#BD976A;">calls</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">===</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">[</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">arg1</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">arg2</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">],</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// first call</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">[</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">arg3</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">arg4</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">],</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// second call</span></span>
<span class="line"><span style="color:#666666;">]</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">fn</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">vi</span><span style="color:#999999;">.</span><span style="color:#59873A;">fn</span><span style="color:#999999;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">fn</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">arg1</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">arg2</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#59873A;">fn</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">arg3</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">arg4</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B07D48;">fn</span><span style="color:#999999;">.</span><span style="color:#B07D48;">mock</span><span style="color:#999999;">.</span><span style="color:#B07D48;">calls</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">===</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">[</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">arg1</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">arg2</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">],</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// first call</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">[</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">arg3</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">arg4</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">],</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// second call</span></span>
<span class="line"><span style="color:#999999;">]</span></span></code></pre></div><h2 id="mock-lastcall" tabindex="-1">mock.lastCall <a class="header-anchor" href="#mock-lastcall" aria-label="Permalink to &quot;mock.lastCall&quot;">​</a></h2><p>This contains the arguments of the last call. If spy wasn&#39;t called, will return <code>undefined</code>.</p><h2 id="mock-results" tabindex="-1">mock.results <a class="header-anchor" href="#mock-results" aria-label="Permalink to &quot;mock.results&quot;">​</a></h2><p>This is an array containing all values, that were <code>returned</code> from the function. One item of the array is an object with properties <code>type</code> and <code>value</code>. Available types are:</p><ul><li><code>&#39;return&#39;</code> - function returned without throwing.</li><li><code>&#39;throw&#39;</code> - function threw a value.</li></ul><p>The <code>value</code> property contains the returned value or thrown error. If the function returned a promise, when it resolves the <code>value</code> property will become the value the promise resolved to.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">fn</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">vi</span><span style="color:#666666;">.</span><span style="color:#80A665;">fn</span><span style="color:#666666;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">result</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">fn</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// returned &#39;result&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4D9375;">try</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">fn</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// threw Error</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#4D9375;">catch</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD976A;">fn</span><span style="color:#666666;">.</span><span style="color:#BD976A;">mock</span><span style="color:#666666;">.</span><span style="color:#BD976A;">results</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">===</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// first result</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#B8A965;">type</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">return</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#B8A965;">value</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">result</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">},</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// last result</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#B8A965;">type</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">throw</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#B8A965;">value</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Error</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">},</span></span>
<span class="line"><span style="color:#666666;">]</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">fn</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">vi</span><span style="color:#999999;">.</span><span style="color:#59873A;">fn</span><span style="color:#999999;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">result</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">fn</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// returned &#39;result&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">try</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">fn</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// threw Error</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#1E754F;">catch</span><span style="color:#393A34;"> </span><span style="color:#999999;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B07D48;">fn</span><span style="color:#999999;">.</span><span style="color:#B07D48;">mock</span><span style="color:#999999;">.</span><span style="color:#B07D48;">results</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">===</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// first result</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">type</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">return</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">value</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">result</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">},</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// last result</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">type</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">throw</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">value</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Error</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">},</span></span>
<span class="line"><span style="color:#999999;">]</span></span></code></pre></div><h2 id="mock-instances" tabindex="-1">mock.instances <a class="header-anchor" href="#mock-instances" aria-label="Permalink to &quot;mock.instances&quot;">​</a></h2><p>This is an array containing all instances that were instantiated when mock was called with a <code>new</code> keyword. Note, this is an actual context (<code>this</code>) of the function, not a return value.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>If mock was instantiated with <code>new MyClass()</code>, then <code>mock.instances</code> will be an array with one value:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">MyClass</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">vi</span><span style="color:#666666;">.</span><span style="color:#80A665;">fn</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">a</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">new</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">MyClass</span><span style="color:#666666;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD976A;">MyClass</span><span style="color:#666666;">.</span><span style="color:#BD976A;">mock</span><span style="color:#666666;">.</span><span style="color:#BD976A;">instances</span><span style="color:#666666;">[</span><span style="color:#4C9A91;">0</span><span style="color:#666666;">]</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">===</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">a</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">MyClass</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">vi</span><span style="color:#999999;">.</span><span style="color:#59873A;">fn</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">a</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#59873A;">MyClass</span><span style="color:#999999;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B07D48;">MyClass</span><span style="color:#999999;">.</span><span style="color:#B07D48;">mock</span><span style="color:#999999;">.</span><span style="color:#B07D48;">instances</span><span style="color:#999999;">[</span><span style="color:#2F798A;">0</span><span style="color:#999999;">]</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">===</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">a</span></span></code></pre></div><p>If you return a value from constructor, it will not be in <code>instances</code> array, but instead inside <code>results</code>:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Spy</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">vi</span><span style="color:#666666;">.</span><span style="color:#80A665;">fn</span><span style="color:#666666;">(()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">({</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">method</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">vi</span><span style="color:#666666;">.</span><span style="color:#80A665;">fn</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}))</span></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">a</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">new</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">Spy</span><span style="color:#666666;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD976A;">Spy</span><span style="color:#666666;">.</span><span style="color:#BD976A;">mock</span><span style="color:#666666;">.</span><span style="color:#BD976A;">instances</span><span style="color:#666666;">[</span><span style="color:#4C9A91;">0</span><span style="color:#666666;">]</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">!==</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">a</span></span>
<span class="line"><span style="color:#BD976A;">Spy</span><span style="color:#666666;">.</span><span style="color:#BD976A;">mock</span><span style="color:#666666;">.</span><span style="color:#BD976A;">results</span><span style="color:#666666;">[</span><span style="color:#4C9A91;">0</span><span style="color:#666666;">]</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">===</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">a</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Spy</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">vi</span><span style="color:#999999;">.</span><span style="color:#59873A;">fn</span><span style="color:#999999;">(()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">({</span><span style="color:#393A34;"> </span><span style="color:#998418;">method</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">vi</span><span style="color:#999999;">.</span><span style="color:#59873A;">fn</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">}))</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">a</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#59873A;">Spy</span><span style="color:#999999;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B07D48;">Spy</span><span style="color:#999999;">.</span><span style="color:#B07D48;">mock</span><span style="color:#999999;">.</span><span style="color:#B07D48;">instances</span><span style="color:#999999;">[</span><span style="color:#2F798A;">0</span><span style="color:#999999;">]</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">!==</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">a</span></span>
<span class="line"><span style="color:#B07D48;">Spy</span><span style="color:#999999;">.</span><span style="color:#B07D48;">mock</span><span style="color:#999999;">.</span><span style="color:#B07D48;">results</span><span style="color:#999999;">[</span><span style="color:#2F798A;">0</span><span style="color:#999999;">]</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">===</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">a</span></span></code></pre></div></div>`,47),e=[p];function c(t,r,y,i,A,D){return n(),a("div",null,e)}const m=s(o,[["render",c]]);export{d as __pageData,m as default};
