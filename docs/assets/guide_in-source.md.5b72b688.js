import{_ as l,j as p,k as o,V as a,C as s,p as n}from"./chunks/framework.8939a477.js";const C=JSON.parse('{"title":"In-source testing | Guide","description":"","frontmatter":{"title":"In-source testing | Guide"},"headers":[],"relativePath":"guide/in-source.md","filePath":"guide/in-source.md","lastUpdated":1690470465000}'),e={name:"guide/in-source.md"},t=a(`<h1 id="in-source-testing" tabindex="-1">In-source testing <a class="header-anchor" href="#in-source-testing" aria-label="Permalink to &quot;In-source testing&quot;">​</a></h1><p>Vitest also provides a way to run tests within your source code along side the implementation, similar to <a href="https://doc.rust-lang.org/book/ch11-03-test-organization.html#the-tests-module-and-cfgtest" target="_blank" rel="noreferrer">Rust&#39;s module tests</a>.</p><p>This makes the tests share the same closure as the implementations and able to test against private states without exporting. Meanwhile, it also brings a closer feedback loop for development.</p><h2 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-label="Permalink to &quot;Setup&quot;">​</a></h2><p>To get started, put a <code>if (i<wbr>mport.meta.vitest)</code> block at the end of your source file and write some tests inside it. For example:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// src/index.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// the implementation</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">add</span><span style="color:#666666;">(...</span><span style="color:#BD976A;">args</span><span style="color:#666666;">: </span><span style="color:#5DA994;">number</span><span style="color:#666666;">[])</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">args</span><span style="color:#666666;">.</span><span style="color:#80A665;">reduce</span><span style="color:#666666;">((</span><span style="color:#BD976A;">a</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">b</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">a</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">+</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">b</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">0</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// in-source test suites</span></span>
<span class="line"><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#4D9375;">import</span><span style="color:#666666;">.</span><span style="color:#B8A965;">meta</span><span style="color:#666666;">.</span><span style="color:#BD976A;">vitest</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const </span><span style="color:#666666;">{</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">it</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">expect</span><span style="color:#CB7676;"> </span><span style="color:#666666;">}</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#4D9375;">import</span><span style="color:#666666;">.</span><span style="color:#B8A965;">meta</span><span style="color:#666666;">.</span><span style="color:#BD976A;">vitest</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">it</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">add</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#80A665;">expect</span><span style="color:#666666;">(</span><span style="color:#80A665;">add</span><span style="color:#666666;">()).</span><span style="color:#80A665;">toBe</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">0</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#80A665;">expect</span><span style="color:#666666;">(</span><span style="color:#80A665;">add</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">)).</span><span style="color:#80A665;">toBe</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#80A665;">expect</span><span style="color:#666666;">(</span><span style="color:#80A665;">add</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">2</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">3</span><span style="color:#666666;">)).</span><span style="color:#80A665;">toBe</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">6</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// src/index.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// the implementation</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">add</span><span style="color:#999999;">(...</span><span style="color:#B07D48;">args</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">number</span><span style="color:#999999;">[])</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">args</span><span style="color:#999999;">.</span><span style="color:#59873A;">reduce</span><span style="color:#999999;">((</span><span style="color:#B07D48;">a</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">b</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">a</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">+</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">b</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">0</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// in-source test suites</span></span>
<span class="line"><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#1E754F;">import</span><span style="color:#999999;">.</span><span style="color:#998418;">meta</span><span style="color:#999999;">.</span><span style="color:#B07D48;">vitest</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const </span><span style="color:#999999;">{</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">it</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">expect</span><span style="color:#AB5959;"> </span><span style="color:#999999;">}</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#1E754F;">import</span><span style="color:#999999;">.</span><span style="color:#998418;">meta</span><span style="color:#999999;">.</span><span style="color:#B07D48;">vitest</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">it</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">add</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">expect</span><span style="color:#999999;">(</span><span style="color:#59873A;">add</span><span style="color:#999999;">()).</span><span style="color:#59873A;">toBe</span><span style="color:#999999;">(</span><span style="color:#2F798A;">0</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">expect</span><span style="color:#999999;">(</span><span style="color:#59873A;">add</span><span style="color:#999999;">(</span><span style="color:#2F798A;">1</span><span style="color:#999999;">)).</span><span style="color:#59873A;">toBe</span><span style="color:#999999;">(</span><span style="color:#2F798A;">1</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">expect</span><span style="color:#999999;">(</span><span style="color:#59873A;">add</span><span style="color:#999999;">(</span><span style="color:#2F798A;">1</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">2</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">3</span><span style="color:#999999;">)).</span><span style="color:#59873A;">toBe</span><span style="color:#999999;">(</span><span style="color:#2F798A;">6</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><p>Update the <code>includeSource</code> config for Vitest to grab the files under <code>src/</code>:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// vite.config.ts</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">defineConfig</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest/config</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">default</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">defineConfig</span><span style="color:#666666;">({</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#B8A965;">test</span><span style="color:#666666;">: {</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#B8A965;">includeSource</span><span style="color:#666666;">: [</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">src/**/*.{js,ts}</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">],</span></span>
<span class="line"><span style="color:#666666;">  },</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// vite.config.ts</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">defineConfig</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest/config</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#59873A;">defineConfig</span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">test</span><span style="color:#999999;">: {</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#998418;">includeSource</span><span style="color:#999999;">: [</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">src/**/*.{js,ts}</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">],</span></span>
<span class="line"><span style="color:#999999;">  },</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div><p>Then you can start to test!</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#80A665;">$</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">npx</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">vitest</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#59873A;">$</span><span style="color:#393A34;"> </span><span style="color:#B56959;">npx</span><span style="color:#393A34;"> </span><span style="color:#B56959;">vitest</span></span></code></pre></div><h2 id="production-build" tabindex="-1">Production build <a class="header-anchor" href="#production-build" aria-label="Permalink to &quot;Production build&quot;">​</a></h2><p>For the production build, you will need to set the <code>define</code> options in your config file, letting the bundler do the dead code elimination. For example, in Vite</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#DBD7CAEE;">// vite.config.ts</span></span>
<span class="line"><span style="color:#DBD7CAEE;">import { defineConfig } from &#39;vitest/config&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">export default defineConfig({</span></span>
<span class="line"><span style="color:#85E89D;">+ define: {</span></span>
<span class="line"><span style="color:#85E89D;">+   &#39;i<wbr>mport.meta.vitest&#39;: &#39;undefined&#39;,</span></span>
<span class="line"><span style="color:#85E89D;">+ },</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  test: {</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    includeSource: [&#39;src/**/*.{js,ts}&#39;]</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  },</span></span>
<span class="line"><span style="color:#DBD7CAEE;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#393A34;">// vite.config.ts</span></span>
<span class="line"><span style="color:#393A34;">import { defineConfig } from &#39;vitest/config&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">export default defineConfig({</span></span>
<span class="line"><span style="color:#22863A;">+ define: {</span></span>
<span class="line"><span style="color:#22863A;">+   &#39;i<wbr>mport.meta.vitest&#39;: &#39;undefined&#39;,</span></span>
<span class="line"><span style="color:#22863A;">+ },</span></span>
<span class="line"><span style="color:#393A34;">  test: {</span></span>
<span class="line"><span style="color:#393A34;">    includeSource: [&#39;src/**/*.{js,ts}&#39;]</span></span>
<span class="line"><span style="color:#393A34;">  },</span></span>
<span class="line"><span style="color:#393A34;">})</span></span></code></pre></div><h3 id="other-bundlers" tabindex="-1">Other Bundlers <a class="header-anchor" href="#other-bundlers" aria-label="Permalink to &quot;Other Bundlers&quot;">​</a></h3>`,14),c=s("details",{mt4:""},[s("summary",{"text-xl":""},"unbuild"),s("div",{class:"language-diff vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"diff"),s("pre",{class:"shiki vitesse-dark vp-code-dark"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#DBD7CAEE"}},"// build.config.ts")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#DBD7CAEE"}},"import { defineBuildConfig } from 'unbuild'")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#DBD7CAEE"}},"export default defineBuildConfig({")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#85E89D"}},"+ replace: {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#85E89D"}},[n("+   'i"),s("wbr"),n("mport.meta.vitest': 'undefined',")])]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#85E89D"}},"+ },")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#DBD7CAEE"}},"  // other options")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#DBD7CAEE"}},"})")])])]),s("pre",{class:"shiki vitesse-light vp-code-light"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#393A34"}},"// build.config.ts")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#393A34"}},"import { defineBuildConfig } from 'unbuild'")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#393A34"}},"export default defineBuildConfig({")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#22863A"}},"+ replace: {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#22863A"}},[n("+   'i"),s("wbr"),n("mport.meta.vitest': 'undefined',")])]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#22863A"}},"+ },")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#393A34"}},"  // other options")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#393A34"}},"})")])])])]),s("p",null,[n("Learn more: "),s("a",{href:"https://github.com/unjs/unbuild",target:"_blank"},"unbuild")])],-1),r=s("details",{my2:""},[s("summary",{"text-xl":""},"rollup"),s("div",{class:"language-diff vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"diff"),s("pre",{class:"shiki vitesse-dark vp-code-dark"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#DBD7CAEE"}},"// rollup.config.js")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#85E89D"}},"+ import replace from '@rollup/plugin-replace'")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#DBD7CAEE"}},"export default {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#DBD7CAEE"}},"  plugins: [")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#85E89D"}},"+   replace({")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#85E89D"}},[n("+     'i"),s("wbr"),n("mport.meta.vitest': 'undefined',")])]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#85E89D"}},"+   })")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#DBD7CAEE"}},"  ],")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#DBD7CAEE"}},"  // other options")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#DBD7CAEE"}},"}")])])]),s("pre",{class:"shiki vitesse-light vp-code-light"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#393A34"}},"// rollup.config.js")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#22863A"}},"+ import replace from '@rollup/plugin-replace'")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#393A34"}},"export default {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#393A34"}},"  plugins: [")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#22863A"}},"+   replace({")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#22863A"}},[n("+     'i"),s("wbr"),n("mport.meta.vitest': 'undefined',")])]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#22863A"}},"+   })")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#393A34"}},"  ],")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#393A34"}},"  // other options")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#393A34"}},"}")])])])]),s("p",null,[n("Learn more: "),s("a",{href:"https://rollupjs.org/",target:"_blank"},"rollup")])],-1),i=a(`<h2 id="typescript" tabindex="-1">TypeScript <a class="header-anchor" href="#typescript" aria-label="Permalink to &quot;TypeScript&quot;">​</a></h2><p>To get TypeScript support for <code>i<wbr>mport.meta.vitest</code>, add <code>vitest/importMeta</code> to your <code>tsconfig.json</code>:</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#DBD7CAEE;">// tsconfig.json</span></span>
<span class="line"><span style="color:#DBD7CAEE;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  &quot;compilerOptions&quot;: {</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    &quot;types&quot;: [</span></span>
<span class="line"><span style="color:#85E89D;">+     &quot;vitest/importMeta&quot;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    ]</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="color:#DBD7CAEE;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#393A34;">// tsconfig.json</span></span>
<span class="line"><span style="color:#393A34;">{</span></span>
<span class="line"><span style="color:#393A34;">  &quot;compilerOptions&quot;: {</span></span>
<span class="line"><span style="color:#393A34;">    &quot;types&quot;: [</span></span>
<span class="line"><span style="color:#22863A;">+     &quot;vitest/importMeta&quot;</span></span>
<span class="line"><span style="color:#393A34;">    ]</span></span>
<span class="line"><span style="color:#393A34;">  }</span></span>
<span class="line"><span style="color:#393A34;">}</span></span></code></pre></div><p>Reference to <a href="https://github.com/vitest-dev/vitest/tree/main/test/import-meta" target="_blank" rel="noreferrer"><code>test/import-meta</code></a> for the full example.</p><h2 id="notes" tabindex="-1">Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;Notes&quot;">​</a></h2><p>This feature could be useful for:</p><ul><li>Unit testing for small-scoped functions or utilities</li><li>Prototyping</li><li>Inline Assertion</li></ul><p>It&#39;s recommended to <strong>use separate test files instead</strong> for more complex tests like components or E2E testing.</p>`,8),y=[t,c,r,i];function d(A,D,u,E,f,B){return p(),o("div",null,y)}const g=l(e,[["render",d]]);export{C as __pageData,g as default};
