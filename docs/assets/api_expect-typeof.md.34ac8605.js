import{_ as s,j as a,k as n,V as p}from"./chunks/framework.cf42e605.js";const d=JSON.parse('{"title":"expectTypeOf","description":"","frontmatter":{},"headers":[],"relativePath":"api/expect-typeof.md","filePath":"api/expect-typeof.md","lastUpdated":1680792783000}'),l={name:"api/expect-typeof.md"},o=p(`<h1 id="expecttypeof" tabindex="-1">expectTypeOf <a class="header-anchor" href="#expecttypeof" aria-label="Permalink to &quot;expectTypeOf&quot;">​</a></h1><ul><li><strong>Type:</strong> <code>&lt;T&gt;(a: unknown) =&gt; ExpectTypeOf</code></li></ul><h2 id="not" tabindex="-1">not <a class="header-anchor" href="#not" aria-label="Permalink to &quot;not&quot;">​</a></h2><ul><li><strong>Type:</strong> <code>ExpectTypeOf</code></li></ul><p>You can negate all assertions, using <code>.not</code> property.</p><h2 id="toequaltypeof" tabindex="-1">toEqualTypeOf <a class="header-anchor" href="#toequaltypeof" aria-label="Permalink to &quot;toEqualTypeOf&quot;">​</a></h2><ul><li><strong>Type:</strong> <code>&lt;T&gt;(expected: T) =&gt; void</code></li></ul><p>This matcher will check if the types are fully equal to each other. This matcher will not fail if two objects have different values, but the same type. It will fail however if an object is missing a property.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expectTypeOf</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">({ </span><span style="color:#B8A965;">a</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">1</span><span style="color:#666666;"> }).</span><span style="color:#80A665;">toEqualTypeOf</span><span style="color:#666666;">&lt;{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">a</span><span style="color:#666666;">: </span><span style="color:#5DA994;">number</span><span style="color:#666666;"> }&gt;()</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">({ </span><span style="color:#B8A965;">a</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">1</span><span style="color:#666666;"> }).</span><span style="color:#80A665;">toEqualTypeOf</span><span style="color:#666666;">({ </span><span style="color:#B8A965;">a</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">1</span><span style="color:#666666;"> })</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">({ </span><span style="color:#B8A965;">a</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">1</span><span style="color:#666666;"> }).</span><span style="color:#80A665;">toEqualTypeOf</span><span style="color:#666666;">({ </span><span style="color:#B8A965;">a</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">2</span><span style="color:#666666;"> })</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">({ </span><span style="color:#B8A965;">a</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">, </span><span style="color:#B8A965;">b</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">1</span><span style="color:#666666;"> }).</span><span style="color:#BD976A;">not</span><span style="color:#666666;">.</span><span style="color:#80A665;">toEqualTypeOf</span><span style="color:#666666;">&lt;{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">a</span><span style="color:#666666;">: </span><span style="color:#5DA994;">number</span><span style="color:#666666;"> }&gt;()</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expectTypeOf</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">({ </span><span style="color:#998418;">a</span><span style="color:#999999;">: </span><span style="color:#2F798A;">1</span><span style="color:#999999;"> }).</span><span style="color:#59873A;">toEqualTypeOf</span><span style="color:#999999;">&lt;{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">a</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">number</span><span style="color:#999999;"> }&gt;()</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">({ </span><span style="color:#998418;">a</span><span style="color:#999999;">: </span><span style="color:#2F798A;">1</span><span style="color:#999999;"> }).</span><span style="color:#59873A;">toEqualTypeOf</span><span style="color:#999999;">({ </span><span style="color:#998418;">a</span><span style="color:#999999;">: </span><span style="color:#2F798A;">1</span><span style="color:#999999;"> })</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">({ </span><span style="color:#998418;">a</span><span style="color:#999999;">: </span><span style="color:#2F798A;">1</span><span style="color:#999999;"> }).</span><span style="color:#59873A;">toEqualTypeOf</span><span style="color:#999999;">({ </span><span style="color:#998418;">a</span><span style="color:#999999;">: </span><span style="color:#2F798A;">2</span><span style="color:#999999;"> })</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">({ </span><span style="color:#998418;">a</span><span style="color:#999999;">: </span><span style="color:#2F798A;">1</span><span style="color:#999999;">, </span><span style="color:#998418;">b</span><span style="color:#999999;">: </span><span style="color:#2F798A;">1</span><span style="color:#999999;"> }).</span><span style="color:#B07D48;">not</span><span style="color:#999999;">.</span><span style="color:#59873A;">toEqualTypeOf</span><span style="color:#999999;">&lt;{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">a</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">number</span><span style="color:#999999;"> }&gt;()</span></span></code></pre></div><h2 id="tomatchtypeof" tabindex="-1">toMatchTypeOf <a class="header-anchor" href="#tomatchtypeof" aria-label="Permalink to &quot;toMatchTypeOf&quot;">​</a></h2><ul><li><strong>Type:</strong> <code>&lt;T&gt;(expected: T) =&gt; void</code></li></ul><p>This matcher checks if expect type extends provided type. It is different from <code>toEqual</code> and is more similar to <a href="/api/expect.html">expect&#39;s</a> <code>toMatchObject()</code>. With this matcher, you can check if an object “matches” a type.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expectTypeOf</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">({ </span><span style="color:#B8A965;">a</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">, </span><span style="color:#B8A965;">b</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">1</span><span style="color:#666666;"> }).</span><span style="color:#80A665;">toMatchTypeOf</span><span style="color:#666666;">({ </span><span style="color:#B8A965;">a</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">1</span><span style="color:#666666;"> })</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">number</span><span style="color:#666666;">&gt;().</span><span style="color:#80A665;">toMatchTypeOf</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">string</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">|</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">number</span><span style="color:#666666;">&gt;()</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">string</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">|</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">number</span><span style="color:#666666;">&gt;().</span><span style="color:#BD976A;">not</span><span style="color:#666666;">.</span><span style="color:#80A665;">toMatchTypeOf</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">number</span><span style="color:#666666;">&gt;()</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expectTypeOf</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">({ </span><span style="color:#998418;">a</span><span style="color:#999999;">: </span><span style="color:#2F798A;">1</span><span style="color:#999999;">, </span><span style="color:#998418;">b</span><span style="color:#999999;">: </span><span style="color:#2F798A;">1</span><span style="color:#999999;"> }).</span><span style="color:#59873A;">toMatchTypeOf</span><span style="color:#999999;">({ </span><span style="color:#998418;">a</span><span style="color:#999999;">: </span><span style="color:#2F798A;">1</span><span style="color:#999999;"> })</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">number</span><span style="color:#999999;">&gt;().</span><span style="color:#59873A;">toMatchTypeOf</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">string</span><span style="color:#393A34;"> </span><span style="color:#999999;">|</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">number</span><span style="color:#999999;">&gt;()</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">string</span><span style="color:#393A34;"> </span><span style="color:#999999;">|</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">number</span><span style="color:#999999;">&gt;().</span><span style="color:#B07D48;">not</span><span style="color:#999999;">.</span><span style="color:#59873A;">toMatchTypeOf</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">number</span><span style="color:#999999;">&gt;()</span></span></code></pre></div><h2 id="extract" tabindex="-1">extract <a class="header-anchor" href="#extract" aria-label="Permalink to &quot;extract&quot;">​</a></h2><ul><li><strong>Type:</strong> <code>ExpectTypeOf&lt;ExtractedUnion&gt;</code></li></ul><p>You can use <code>.extract</code> to narrow down types for further testing.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expectTypeOf</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">type</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">ResponsiveProp</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">T</span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">T</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">|</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">T</span><span style="color:#666666;">[]</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">|</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">xs</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: </span><span style="color:#5DA994;">T</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">sm</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: </span><span style="color:#5DA994;">T</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">md</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: </span><span style="color:#5DA994;">T</span><span style="color:#666666;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">interface</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">CSSProperties</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">margin</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: </span><span style="color:#5DA994;">string</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">padding</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: </span><span style="color:#5DA994;">string</span><span style="color:#666666;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">getResponsiveProp</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">T</span><span style="color:#666666;">&gt;(</span><span style="color:#BD976A;">_props</span><span style="color:#666666;">: </span><span style="color:#5DA994;">T</span><span style="color:#666666;">):</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">ResponsiveProp</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">T</span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{}</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">cssProperties</span><span style="color:#666666;">: </span><span style="color:#5DA994;">CSSProperties</span><span style="color:#666666;"> =</span><span style="color:#CB7676;"> </span><span style="color:#666666;">{ </span><span style="color:#B8A965;">margin</span><span style="color:#666666;">: </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">1px</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">, </span><span style="color:#B8A965;">padding</span><span style="color:#666666;">: </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">2px</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#80A665;">getResponsiveProp</span><span style="color:#666666;">(</span><span style="color:#BD976A;">cssProperties</span><span style="color:#666666;">))</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">extract</span><span style="color:#666666;">&lt;{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">xs</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: </span><span style="color:#5DA994;">any</span><span style="color:#666666;"> }&gt;()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// extracts the last type from a union</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">toEqualTypeOf</span><span style="color:#666666;">&lt;{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">xs</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: </span><span style="color:#5DA994;">CSSProperties</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">sm</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: </span><span style="color:#5DA994;">CSSProperties</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">md</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: </span><span style="color:#5DA994;">CSSProperties</span><span style="color:#666666;"> }&gt;()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#80A665;">getResponsiveProp</span><span style="color:#666666;">(</span><span style="color:#BD976A;">cssProperties</span><span style="color:#666666;">))</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">extract</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">unknown</span><span style="color:#666666;">[]&gt;()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// extracts an array from a union</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">toEqualTypeOf</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">CSSProperties</span><span style="color:#666666;">[]&gt;()</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expectTypeOf</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">type</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">ResponsiveProp</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">T</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">T</span><span style="color:#393A34;"> </span><span style="color:#999999;">|</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">T</span><span style="color:#999999;">[]</span><span style="color:#393A34;"> </span><span style="color:#999999;">|</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">xs</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">T</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">sm</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">T</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">md</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">T</span><span style="color:#999999;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">interface</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">CSSProperties</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">margin</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">string</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">padding</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">string</span><span style="color:#999999;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">getResponsiveProp</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">T</span><span style="color:#999999;">&gt;(</span><span style="color:#B07D48;">_props</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">T</span><span style="color:#999999;">):</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">ResponsiveProp</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">T</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#999999;">{}</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">cssProperties</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">CSSProperties</span><span style="color:#999999;"> =</span><span style="color:#AB5959;"> </span><span style="color:#999999;">{ </span><span style="color:#998418;">margin</span><span style="color:#999999;">: </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">1px</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">, </span><span style="color:#998418;">padding</span><span style="color:#999999;">: </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">2px</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#59873A;">getResponsiveProp</span><span style="color:#999999;">(</span><span style="color:#B07D48;">cssProperties</span><span style="color:#999999;">))</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">extract</span><span style="color:#999999;">&lt;{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">xs</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">any</span><span style="color:#999999;"> }&gt;()</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// extracts the last type from a union</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">toEqualTypeOf</span><span style="color:#999999;">&lt;{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">xs</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">CSSProperties</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">sm</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">CSSProperties</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">md</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">CSSProperties</span><span style="color:#999999;"> }&gt;()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#59873A;">getResponsiveProp</span><span style="color:#999999;">(</span><span style="color:#B07D48;">cssProperties</span><span style="color:#999999;">))</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">extract</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">unknown</span><span style="color:#999999;">[]&gt;()</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// extracts an array from a union</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">toEqualTypeOf</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">CSSProperties</span><span style="color:#999999;">[]&gt;()</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>If no type is found in the union, <code>.extract</code> will return <code>never</code>.</p></div><h2 id="exclude" tabindex="-1">exclude <a class="header-anchor" href="#exclude" aria-label="Permalink to &quot;exclude&quot;">​</a></h2><ul><li><strong>Type:</strong> <code>ExpectTypeOf&lt;NonExcludedUnion&gt;</code></li></ul><p>You can use <code>.exclude</code> to remove types from a union for further testing.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expectTypeOf</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">type</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">ResponsiveProp</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">T</span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">T</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">|</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">T</span><span style="color:#666666;">[]</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">|</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">xs</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: </span><span style="color:#5DA994;">T</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">sm</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: </span><span style="color:#5DA994;">T</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">md</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: </span><span style="color:#5DA994;">T</span><span style="color:#666666;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">interface</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">CSSProperties</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">margin</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: </span><span style="color:#5DA994;">string</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">padding</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: </span><span style="color:#5DA994;">string</span><span style="color:#666666;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">getResponsiveProp</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">T</span><span style="color:#666666;">&gt;(</span><span style="color:#BD976A;">_props</span><span style="color:#666666;">: </span><span style="color:#5DA994;">T</span><span style="color:#666666;">):</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">ResponsiveProp</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">T</span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{}</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">cssProperties</span><span style="color:#666666;">: </span><span style="color:#5DA994;">CSSProperties</span><span style="color:#666666;"> =</span><span style="color:#CB7676;"> </span><span style="color:#666666;">{ </span><span style="color:#B8A965;">margin</span><span style="color:#666666;">: </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">1px</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">, </span><span style="color:#B8A965;">padding</span><span style="color:#666666;">: </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">2px</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#80A665;">getResponsiveProp</span><span style="color:#666666;">(</span><span style="color:#BD976A;">cssProperties</span><span style="color:#666666;">))</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">exclude</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">unknown</span><span style="color:#666666;">[]&gt;()</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">exclude</span><span style="color:#666666;">&lt;{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">xs</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: </span><span style="color:#5DA994;">unknown</span><span style="color:#666666;"> }&gt;()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// or just .exclude&lt;unknown[] | { xs?: unknown }&gt;()</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">toEqualTypeOf</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">CSSProperties</span><span style="color:#666666;">&gt;()</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expectTypeOf</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">type</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">ResponsiveProp</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">T</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">T</span><span style="color:#393A34;"> </span><span style="color:#999999;">|</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">T</span><span style="color:#999999;">[]</span><span style="color:#393A34;"> </span><span style="color:#999999;">|</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">xs</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">T</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">sm</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">T</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">md</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">T</span><span style="color:#999999;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">interface</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">CSSProperties</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">margin</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">string</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">padding</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">string</span><span style="color:#999999;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">getResponsiveProp</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">T</span><span style="color:#999999;">&gt;(</span><span style="color:#B07D48;">_props</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">T</span><span style="color:#999999;">):</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">ResponsiveProp</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">T</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#999999;">{}</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">cssProperties</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">CSSProperties</span><span style="color:#999999;"> =</span><span style="color:#AB5959;"> </span><span style="color:#999999;">{ </span><span style="color:#998418;">margin</span><span style="color:#999999;">: </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">1px</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">, </span><span style="color:#998418;">padding</span><span style="color:#999999;">: </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">2px</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#59873A;">getResponsiveProp</span><span style="color:#999999;">(</span><span style="color:#B07D48;">cssProperties</span><span style="color:#999999;">))</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">exclude</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">unknown</span><span style="color:#999999;">[]&gt;()</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">exclude</span><span style="color:#999999;">&lt;{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">xs</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">unknown</span><span style="color:#999999;"> }&gt;()</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// or just .exclude&lt;unknown[] | { xs?: unknown }&gt;()</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">toEqualTypeOf</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">CSSProperties</span><span style="color:#999999;">&gt;()</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>If no type is found in the union, <code>.exclude</code> will return <code>never</code>.</p></div><h2 id="returns" tabindex="-1">returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;returns&quot;">​</a></h2><ul><li><strong>Type:</strong> <code>ExpectTypeOf&lt;ReturnValue&gt;</code></li></ul><p>You can use <code>.returns</code> to extract return value of a function type.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expectTypeOf</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{}).</span><span style="color:#BD976A;">returns</span><span style="color:#666666;">.</span><span style="color:#80A665;">toBeVoid</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">((</span><span style="color:#BD976A;">a</span><span style="color:#666666;">: </span><span style="color:#5DA994;">number</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[</span><span style="color:#BD976A;">a</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">a</span><span style="color:#666666;">]).</span><span style="color:#BD976A;">returns</span><span style="color:#666666;">.</span><span style="color:#80A665;">toEqualTypeOf</span><span style="color:#666666;">([</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">2</span><span style="color:#666666;">])</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expectTypeOf</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{}).</span><span style="color:#B07D48;">returns</span><span style="color:#999999;">.</span><span style="color:#59873A;">toBeVoid</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">((</span><span style="color:#B07D48;">a</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">number</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span><span style="color:#B07D48;">a</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">a</span><span style="color:#999999;">]).</span><span style="color:#B07D48;">returns</span><span style="color:#999999;">.</span><span style="color:#59873A;">toEqualTypeOf</span><span style="color:#999999;">([</span><span style="color:#2F798A;">1</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">2</span><span style="color:#999999;">])</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>If used on a non-function type, it will return <code>never</code>, so you won&#39;t be able to chain it with other matchers.</p></div><h2 id="parameters" tabindex="-1">parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;parameters&quot;">​</a></h2><ul><li><strong>Type:</strong> <code>ExpectTypeOf&lt;Parameters&gt;</code></li></ul><p>You can extract function arguments with <code>.parameters</code> to perform assertions on its value. Parameters are returned as an array.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expectTypeOf</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">type</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">NoParam</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">void</span></span>
<span class="line"><span style="color:#CB7676;">type</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">HasParam</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">s</span><span style="color:#666666;">: </span><span style="color:#5DA994;">string</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">void</span></span>
<span class="line"></span>
<span class="line"><span style="color:#5DA994;">expectTypeOf</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">NoParam</span><span style="color:#666666;">&gt;()</span><span style="color:#DBD7CAEE;">.</span><span style="color:#5DA994;">parameters</span><span style="color:#666666;">.</span><span style="color:#5DA994;">toEqualTypeOf</span><span style="color:#666666;">&lt;[]&gt;()</span></span>
<span class="line"><span style="color:#5DA994;">expectTypeOf</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">HasParam</span><span style="color:#666666;">&gt;()</span><span style="color:#DBD7CAEE;">.</span><span style="color:#5DA994;">parameters</span><span style="color:#666666;">.</span><span style="color:#5DA994;">toEqualTypeOf</span><span style="color:#666666;">&lt;[</span><span style="color:#5DA994;">string</span><span style="color:#666666;">]&gt;()</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expectTypeOf</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">type</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">NoParam</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">void</span></span>
<span class="line"><span style="color:#AB5959;">type</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">HasParam</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">s</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">string</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">void</span></span>
<span class="line"></span>
<span class="line"><span style="color:#2E8F82;">expectTypeOf</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">NoParam</span><span style="color:#999999;">&gt;()</span><span style="color:#393A34;">.</span><span style="color:#2E8F82;">parameters</span><span style="color:#999999;">.</span><span style="color:#2E8F82;">toEqualTypeOf</span><span style="color:#999999;">&lt;[]&gt;()</span></span>
<span class="line"><span style="color:#2E8F82;">expectTypeOf</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">HasParam</span><span style="color:#999999;">&gt;()</span><span style="color:#393A34;">.</span><span style="color:#2E8F82;">parameters</span><span style="color:#999999;">.</span><span style="color:#2E8F82;">toEqualTypeOf</span><span style="color:#999999;">&lt;[</span><span style="color:#2E8F82;">string</span><span style="color:#999999;">]&gt;()</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>If used on a non-function type, it will return <code>never</code>, so you won&#39;t be able to chain it with other matchers.</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You can also use <a href="#tobecallablewith"><code>.toBeCallableWith</code></a> matcher as a more expressive assertion.</p></div><h2 id="parameter" tabindex="-1">parameter <a class="header-anchor" href="#parameter" aria-label="Permalink to &quot;parameter&quot;">​</a></h2><ul><li><strong>Type:</strong> <code>(nth: number) =&gt; ExpectTypeOf</code></li></ul><p>You can extract a certain function argument with <code>.parameter(number)</code> call to perform other assertions on it.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expectTypeOf</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">foo</span><span style="color:#666666;">(</span><span style="color:#BD976A;">a</span><span style="color:#666666;">: </span><span style="color:#5DA994;">number</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">b</span><span style="color:#666666;">: </span><span style="color:#5DA994;">string</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[</span><span style="color:#BD976A;">a</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">b</span><span style="color:#666666;">]</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#BD976A;">foo</span><span style="color:#666666;">).</span><span style="color:#80A665;">parameter</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">0</span><span style="color:#666666;">).</span><span style="color:#80A665;">toBeNumber</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#BD976A;">foo</span><span style="color:#666666;">).</span><span style="color:#80A665;">parameter</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">).</span><span style="color:#80A665;">toBeString</span><span style="color:#666666;">()</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expectTypeOf</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">foo</span><span style="color:#999999;">(</span><span style="color:#B07D48;">a</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">number</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">b</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">string</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span><span style="color:#B07D48;">a</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">b</span><span style="color:#999999;">]</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#B07D48;">foo</span><span style="color:#999999;">).</span><span style="color:#59873A;">parameter</span><span style="color:#999999;">(</span><span style="color:#2F798A;">0</span><span style="color:#999999;">).</span><span style="color:#59873A;">toBeNumber</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#B07D48;">foo</span><span style="color:#999999;">).</span><span style="color:#59873A;">parameter</span><span style="color:#999999;">(</span><span style="color:#2F798A;">1</span><span style="color:#999999;">).</span><span style="color:#59873A;">toBeString</span><span style="color:#999999;">()</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>If used on a non-function type, it will return <code>never</code>, so you won&#39;t be able to chain it with other matchers.</p></div><h2 id="constructorparameters" tabindex="-1">constructorParameters <a class="header-anchor" href="#constructorparameters" aria-label="Permalink to &quot;constructorParameters&quot;">​</a></h2><ul><li><strong>Type:</strong> <code>ExpectTypeOf&lt;ConstructorParameters&gt;</code></li></ul><p>You can extract constructor parameters as an array of values and perform assertions on them with this method.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expectTypeOf</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#BD976A;">Date</span><span style="color:#666666;">).</span><span style="color:#BD976A;">constructorParameters</span><span style="color:#666666;">.</span><span style="color:#80A665;">toEqualTypeOf</span><span style="color:#666666;">&lt;[]</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">|</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[</span><span style="color:#5DA994;">string</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">|</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">number</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">|</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">Date</span><span style="color:#666666;">]&gt;()</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expectTypeOf</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#B07D48;">Date</span><span style="color:#999999;">).</span><span style="color:#B07D48;">constructorParameters</span><span style="color:#999999;">.</span><span style="color:#59873A;">toEqualTypeOf</span><span style="color:#999999;">&lt;[]</span><span style="color:#393A34;"> </span><span style="color:#999999;">|</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span><span style="color:#2E8F82;">string</span><span style="color:#393A34;"> </span><span style="color:#999999;">|</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">number</span><span style="color:#393A34;"> </span><span style="color:#999999;">|</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">Date</span><span style="color:#999999;">]&gt;()</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>If used on a non-function type, it will return <code>never</code>, so you won&#39;t be able to chain it with other matchers.</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You can also use <a href="#tobeconstructiblewith"><code>.toBeConstructibleWith</code></a> matcher as a more expressive assertion.</p></div><h2 id="instance" tabindex="-1">instance <a class="header-anchor" href="#instance" aria-label="Permalink to &quot;instance&quot;">​</a></h2><ul><li><strong>Type:</strong> <code>ExpectTypeOf&lt;ConstructableInstance&gt;</code></li></ul><p>This property gives access to matchers that can be performed on an instance of the provided class.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expectTypeOf</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#BD976A;">Date</span><span style="color:#666666;">).</span><span style="color:#BD976A;">instance</span><span style="color:#666666;">.</span><span style="color:#80A665;">toHaveProperty</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">toISOString</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expectTypeOf</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#B07D48;">Date</span><span style="color:#999999;">).</span><span style="color:#B07D48;">instance</span><span style="color:#999999;">.</span><span style="color:#59873A;">toHaveProperty</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">toISOString</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>If used on a non-function type, it will return <code>never</code>, so you won&#39;t be able to chain it with other matchers.</p></div><h2 id="items" tabindex="-1">items <a class="header-anchor" href="#items" aria-label="Permalink to &quot;items&quot;">​</a></h2><ul><li><strong>Type:</strong> <code>ExpectTypeOf&lt;T&gt;</code></li></ul><p>You can get array item type with <code>.items</code> to perform further assertions.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expectTypeOf</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">([</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">2</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">3</span><span style="color:#666666;">]).</span><span style="color:#BD976A;">items</span><span style="color:#666666;">.</span><span style="color:#80A665;">toEqualTypeOf</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">number</span><span style="color:#666666;">&gt;()</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">([</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">2</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">3</span><span style="color:#666666;">]).</span><span style="color:#BD976A;">items</span><span style="color:#666666;">.</span><span style="color:#BD976A;">not</span><span style="color:#666666;">.</span><span style="color:#80A665;">toEqualTypeOf</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">string</span><span style="color:#666666;">&gt;()</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expectTypeOf</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">([</span><span style="color:#2F798A;">1</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">2</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">3</span><span style="color:#999999;">]).</span><span style="color:#B07D48;">items</span><span style="color:#999999;">.</span><span style="color:#59873A;">toEqualTypeOf</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">number</span><span style="color:#999999;">&gt;()</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">([</span><span style="color:#2F798A;">1</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">2</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">3</span><span style="color:#999999;">]).</span><span style="color:#B07D48;">items</span><span style="color:#999999;">.</span><span style="color:#B07D48;">not</span><span style="color:#999999;">.</span><span style="color:#59873A;">toEqualTypeOf</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">string</span><span style="color:#999999;">&gt;()</span></span></code></pre></div><h2 id="resolves" tabindex="-1">resolves <a class="header-anchor" href="#resolves" aria-label="Permalink to &quot;resolves&quot;">​</a></h2><ul><li><strong>Type:</strong> <code>ExpectTypeOf&lt;ResolvedPromise&gt;</code></li></ul><p>This matcher extracts resolved value of a <code>Promise</code>, so you can perform other assertions on it.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expectTypeOf</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">asyncFunc</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">123</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#BD976A;">asyncFunc</span><span style="color:#666666;">).</span><span style="color:#BD976A;">returns</span><span style="color:#666666;">.</span><span style="color:#BD976A;">resolves</span><span style="color:#666666;">.</span><span style="color:#80A665;">toBeNumber</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#B8A965;">Promise</span><span style="color:#666666;">.</span><span style="color:#80A665;">resolve</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">string</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)).</span><span style="color:#BD976A;">resolves</span><span style="color:#666666;">.</span><span style="color:#80A665;">toBeString</span><span style="color:#666666;">()</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expectTypeOf</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">asyncFunc</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">123</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#B07D48;">asyncFunc</span><span style="color:#999999;">).</span><span style="color:#B07D48;">returns</span><span style="color:#999999;">.</span><span style="color:#B07D48;">resolves</span><span style="color:#999999;">.</span><span style="color:#59873A;">toBeNumber</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#998418;">Promise</span><span style="color:#999999;">.</span><span style="color:#59873A;">resolve</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">string</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)).</span><span style="color:#B07D48;">resolves</span><span style="color:#999999;">.</span><span style="color:#59873A;">toBeString</span><span style="color:#999999;">()</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>If used on a non-promise type, it will return <code>never</code>, so you won&#39;t be able to chain it with other matchers.</p></div><h2 id="guards" tabindex="-1">guards <a class="header-anchor" href="#guards" aria-label="Permalink to &quot;guards&quot;">​</a></h2><ul><li><strong>Type:</strong> <code>ExpectTypeOf&lt;Guard&gt;</code></li></ul><p>This matcher extracts guard value (e.g., <code>v is number</code>), so you can perform assertions on it.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expectTypeOf</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">isString</span><span style="color:#666666;">(</span><span style="color:#BD976A;">v</span><span style="color:#666666;">: </span><span style="color:#5DA994;">any</span><span style="color:#666666;">):</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">v</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">is</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">string</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">typeof</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">v</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">===</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">string</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#BD976A;">isString</span><span style="color:#666666;">).</span><span style="color:#BD976A;">guards</span><span style="color:#666666;">.</span><span style="color:#80A665;">toBeString</span><span style="color:#666666;">()</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expectTypeOf</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">isString</span><span style="color:#999999;">(</span><span style="color:#B07D48;">v</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">any</span><span style="color:#999999;">):</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">v</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">is</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">string</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">typeof</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">v</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">===</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">string</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#B07D48;">isString</span><span style="color:#999999;">).</span><span style="color:#B07D48;">guards</span><span style="color:#999999;">.</span><span style="color:#59873A;">toBeString</span><span style="color:#999999;">()</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Returns <code>never</code>, if the value is not a guard function, so you won&#39;t be able to chain it with other matchers.</p></div><h2 id="asserts" tabindex="-1">asserts <a class="header-anchor" href="#asserts" aria-label="Permalink to &quot;asserts&quot;">​</a></h2><ul><li><strong>Type:</strong> <code>ExpectTypeOf&lt;Assert&gt;</code></li></ul><p>This matcher extracts assert value (e.g., <code>assert v is number</code>), so you can perform assertions on it.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expectTypeOf</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">assertNumber</span><span style="color:#666666;">(</span><span style="color:#BD976A;">v</span><span style="color:#666666;">: </span><span style="color:#5DA994;">any</span><span style="color:#666666;">):</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">asserts</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">v</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">is</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">number</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#CB7676;">typeof</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">v</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">!==</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">number</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">throw</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">new</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">TypeError</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">Nope !</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#BD976A;">assertNumber</span><span style="color:#666666;">).</span><span style="color:#BD976A;">asserts</span><span style="color:#666666;">.</span><span style="color:#80A665;">toBeNumber</span><span style="color:#666666;">()</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expectTypeOf</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">assertNumber</span><span style="color:#999999;">(</span><span style="color:#B07D48;">v</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">any</span><span style="color:#999999;">):</span><span style="color:#393A34;"> </span><span style="color:#999999;">asserts</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">v</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">is</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">number</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#AB5959;">typeof</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">v</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">!==</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">number</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">throw</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#59873A;">TypeError</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">Nope !</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#B07D48;">assertNumber</span><span style="color:#999999;">).</span><span style="color:#B07D48;">asserts</span><span style="color:#999999;">.</span><span style="color:#59873A;">toBeNumber</span><span style="color:#999999;">()</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Returns <code>never</code>, if the value is not an assert function, so you won&#39;t be able to chain it with other matchers.</p></div><h2 id="tobeany" tabindex="-1">toBeAny <a class="header-anchor" href="#tobeany" aria-label="Permalink to &quot;toBeAny&quot;">​</a></h2><ul><li><strong>Type:</strong> <code>() =&gt; void</code></li></ul><p>With this matcher you can check, if provided type is <code>any</code> type. If the type is too specific, the test will fail.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expectTypeOf</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">any</span><span style="color:#666666;">&gt;().</span><span style="color:#80A665;">toBeAny</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">({}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">as</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">any</span><span style="color:#666666;">).</span><span style="color:#80A665;">toBeAny</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">string</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">).</span><span style="color:#BD976A;">not</span><span style="color:#666666;">.</span><span style="color:#80A665;">toBeAny</span><span style="color:#666666;">()</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expectTypeOf</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">any</span><span style="color:#999999;">&gt;().</span><span style="color:#59873A;">toBeAny</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">({}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">as</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">any</span><span style="color:#999999;">).</span><span style="color:#59873A;">toBeAny</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">string</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">).</span><span style="color:#B07D48;">not</span><span style="color:#999999;">.</span><span style="color:#59873A;">toBeAny</span><span style="color:#999999;">()</span></span></code></pre></div><h2 id="tobeunknown" tabindex="-1">toBeUnknown <a class="header-anchor" href="#tobeunknown" aria-label="Permalink to &quot;toBeUnknown&quot;">​</a></h2><ul><li><strong>Type:</strong> <code>() =&gt; void</code></li></ul><p>This matcher checks, if provided type is <code>unknown</code> type.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expectTypeOf</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">().</span><span style="color:#80A665;">toBeUnknown</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">({}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">as</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">unknown</span><span style="color:#666666;">).</span><span style="color:#80A665;">toBeUnknown</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">string</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">).</span><span style="color:#BD976A;">not</span><span style="color:#666666;">.</span><span style="color:#80A665;">toBeUnknown</span><span style="color:#666666;">()</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expectTypeOf</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">().</span><span style="color:#59873A;">toBeUnknown</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">({}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">as</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">unknown</span><span style="color:#999999;">).</span><span style="color:#59873A;">toBeUnknown</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">string</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">).</span><span style="color:#B07D48;">not</span><span style="color:#999999;">.</span><span style="color:#59873A;">toBeUnknown</span><span style="color:#999999;">()</span></span></code></pre></div><h2 id="tobenever" tabindex="-1">toBeNever <a class="header-anchor" href="#tobenever" aria-label="Permalink to &quot;toBeNever&quot;">​</a></h2><ul><li><strong>Type:</strong> <code>() =&gt; void</code></li></ul><p>This matcher checks, if provided type is a <code>never</code> type.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expectTypeOf</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">never</span><span style="color:#666666;">&gt;().</span><span style="color:#80A665;">toBeNever</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(():</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">never</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{}).</span><span style="color:#BD976A;">returns</span><span style="color:#666666;">.</span><span style="color:#80A665;">toBeNever</span><span style="color:#666666;">()</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expectTypeOf</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">never</span><span style="color:#999999;">&gt;().</span><span style="color:#59873A;">toBeNever</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(():</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">never</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{}).</span><span style="color:#B07D48;">returns</span><span style="color:#999999;">.</span><span style="color:#59873A;">toBeNever</span><span style="color:#999999;">()</span></span></code></pre></div><h2 id="tobefunction" tabindex="-1">toBeFunction <a class="header-anchor" href="#tobefunction" aria-label="Permalink to &quot;toBeFunction&quot;">​</a></h2><ul><li><strong>Type:</strong> <code>() =&gt; void</code></li></ul><p>This matcher checks, if provided type is a <code>function</code>.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expectTypeOf</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">42</span><span style="color:#666666;">).</span><span style="color:#BD976A;">not</span><span style="color:#666666;">.</span><span style="color:#80A665;">toBeFunction</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(():</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">never</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{}).</span><span style="color:#80A665;">toBeFunction</span><span style="color:#666666;">()</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expectTypeOf</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#2F798A;">42</span><span style="color:#999999;">).</span><span style="color:#B07D48;">not</span><span style="color:#999999;">.</span><span style="color:#59873A;">toBeFunction</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(():</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">never</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{}).</span><span style="color:#59873A;">toBeFunction</span><span style="color:#999999;">()</span></span></code></pre></div><h2 id="tobeobject" tabindex="-1">toBeObject <a class="header-anchor" href="#tobeobject" aria-label="Permalink to &quot;toBeObject&quot;">​</a></h2><ul><li><strong>Type:</strong> <code>() =&gt; void</code></li></ul><p>This matcher checks, if provided type is an <code>object</code>.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expectTypeOf</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">42</span><span style="color:#666666;">).</span><span style="color:#BD976A;">not</span><span style="color:#666666;">.</span><span style="color:#80A665;">toBeObject</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">({}).</span><span style="color:#80A665;">toBeObject</span><span style="color:#666666;">()</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expectTypeOf</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#2F798A;">42</span><span style="color:#999999;">).</span><span style="color:#B07D48;">not</span><span style="color:#999999;">.</span><span style="color:#59873A;">toBeObject</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">({}).</span><span style="color:#59873A;">toBeObject</span><span style="color:#999999;">()</span></span></code></pre></div><h2 id="tobearray" tabindex="-1">toBeArray <a class="header-anchor" href="#tobearray" aria-label="Permalink to &quot;toBeArray&quot;">​</a></h2><ul><li><strong>Type:</strong> <code>() =&gt; void</code></li></ul><p>This matcher checks, if provided type is <code>Array&lt;T&gt;</code>.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expectTypeOf</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">42</span><span style="color:#666666;">).</span><span style="color:#BD976A;">not</span><span style="color:#666666;">.</span><span style="color:#80A665;">toBeArray</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">([]).</span><span style="color:#80A665;">toBeArray</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">([</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">2</span><span style="color:#666666;">]).</span><span style="color:#80A665;">toBeArray</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">([{},</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">42</span><span style="color:#666666;">]).</span><span style="color:#80A665;">toBeArray</span><span style="color:#666666;">()</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expectTypeOf</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#2F798A;">42</span><span style="color:#999999;">).</span><span style="color:#B07D48;">not</span><span style="color:#999999;">.</span><span style="color:#59873A;">toBeArray</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">([]).</span><span style="color:#59873A;">toBeArray</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">([</span><span style="color:#2F798A;">1</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">2</span><span style="color:#999999;">]).</span><span style="color:#59873A;">toBeArray</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">([{},</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">42</span><span style="color:#999999;">]).</span><span style="color:#59873A;">toBeArray</span><span style="color:#999999;">()</span></span></code></pre></div><h2 id="tobestring" tabindex="-1">toBeString <a class="header-anchor" href="#tobestring" aria-label="Permalink to &quot;toBeString&quot;">​</a></h2><ul><li><strong>Type:</strong> <code>() =&gt; void</code></li></ul><p>This matcher checks, if provided type is a <code>string</code>.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expectTypeOf</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">42</span><span style="color:#666666;">).</span><span style="color:#BD976A;">not</span><span style="color:#666666;">.</span><span style="color:#80A665;">toBeString</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;&#39;</span><span style="color:#666666;">).</span><span style="color:#80A665;">toBeString</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">a</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">).</span><span style="color:#80A665;">toBeString</span><span style="color:#666666;">()</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expectTypeOf</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#2F798A;">42</span><span style="color:#999999;">).</span><span style="color:#B07D48;">not</span><span style="color:#999999;">.</span><span style="color:#59873A;">toBeString</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;&#39;</span><span style="color:#999999;">).</span><span style="color:#59873A;">toBeString</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">a</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">).</span><span style="color:#59873A;">toBeString</span><span style="color:#999999;">()</span></span></code></pre></div><h2 id="tobeboolean" tabindex="-1">toBeBoolean <a class="header-anchor" href="#tobeboolean" aria-label="Permalink to &quot;toBeBoolean&quot;">​</a></h2><ul><li><strong>Type:</strong> <code>() =&gt; void</code></li></ul><p>This matcher checks, if provided type is <code>boolean</code>.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expectTypeOf</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">42</span><span style="color:#666666;">).</span><span style="color:#BD976A;">not</span><span style="color:#666666;">.</span><span style="color:#80A665;">toBeBoolean</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#4D9375;">true</span><span style="color:#666666;">).</span><span style="color:#80A665;">toBeBoolean</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">boolean</span><span style="color:#666666;">&gt;().</span><span style="color:#80A665;">toBeBoolean</span><span style="color:#666666;">()</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expectTypeOf</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#2F798A;">42</span><span style="color:#999999;">).</span><span style="color:#B07D48;">not</span><span style="color:#999999;">.</span><span style="color:#59873A;">toBeBoolean</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#1E754F;">true</span><span style="color:#999999;">).</span><span style="color:#59873A;">toBeBoolean</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">boolean</span><span style="color:#999999;">&gt;().</span><span style="color:#59873A;">toBeBoolean</span><span style="color:#999999;">()</span></span></code></pre></div><h2 id="tobevoid" tabindex="-1">toBeVoid <a class="header-anchor" href="#tobevoid" aria-label="Permalink to &quot;toBeVoid&quot;">​</a></h2><ul><li><strong>Type:</strong> <code>() =&gt; void</code></li></ul><p>This matcher checks, if provided type is <code>void</code>.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expectTypeOf</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{}).</span><span style="color:#BD976A;">returns</span><span style="color:#666666;">.</span><span style="color:#80A665;">toBeVoid</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">void</span><span style="color:#666666;">&gt;().</span><span style="color:#80A665;">toBeVoid</span><span style="color:#666666;">()</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expectTypeOf</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{}).</span><span style="color:#B07D48;">returns</span><span style="color:#999999;">.</span><span style="color:#59873A;">toBeVoid</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">void</span><span style="color:#999999;">&gt;().</span><span style="color:#59873A;">toBeVoid</span><span style="color:#999999;">()</span></span></code></pre></div><h2 id="tobesymbol" tabindex="-1">toBeSymbol <a class="header-anchor" href="#tobesymbol" aria-label="Permalink to &quot;toBeSymbol&quot;">​</a></h2><ul><li><strong>Type:</strong> <code>() =&gt; void</code></li></ul><p>This matcher checks, if provided type is a <code>symbol</code>.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expectTypeOf</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#80A665;">Symbol</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">)).</span><span style="color:#80A665;">toBeSymbol</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">symbol</span><span style="color:#666666;">&gt;().</span><span style="color:#80A665;">toBeSymbol</span><span style="color:#666666;">()</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expectTypeOf</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#59873A;">Symbol</span><span style="color:#999999;">(</span><span style="color:#2F798A;">1</span><span style="color:#999999;">)).</span><span style="color:#59873A;">toBeSymbol</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">symbol</span><span style="color:#999999;">&gt;().</span><span style="color:#59873A;">toBeSymbol</span><span style="color:#999999;">()</span></span></code></pre></div><h2 id="tobenull" tabindex="-1">toBeNull <a class="header-anchor" href="#tobenull" aria-label="Permalink to &quot;toBeNull&quot;">​</a></h2><ul><li><strong>Type:</strong> <code>() =&gt; void</code></li></ul><p>This matcher checks, if provided type is <code>null</code>.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expectTypeOf</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#CB7676;">null</span><span style="color:#666666;">).</span><span style="color:#80A665;">toBeNull</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">&lt;</span><span style="color:#CB7676;">null</span><span style="color:#666666;">&gt;().</span><span style="color:#80A665;">toBeNull</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#CB7676;">undefined</span><span style="color:#666666;">).</span><span style="color:#BD976A;">not</span><span style="color:#666666;">.</span><span style="color:#80A665;">toBeNull</span><span style="color:#666666;">()</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expectTypeOf</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#AB5959;">null</span><span style="color:#999999;">).</span><span style="color:#59873A;">toBeNull</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">&lt;</span><span style="color:#AB5959;">null</span><span style="color:#999999;">&gt;().</span><span style="color:#59873A;">toBeNull</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#AB5959;">undefined</span><span style="color:#999999;">).</span><span style="color:#B07D48;">not</span><span style="color:#999999;">.</span><span style="color:#59873A;">toBeNull</span><span style="color:#999999;">()</span></span></code></pre></div><h2 id="tobeundefined" tabindex="-1">toBeUndefined <a class="header-anchor" href="#tobeundefined" aria-label="Permalink to &quot;toBeUndefined&quot;">​</a></h2><ul><li><strong>Type:</strong> <code>() =&gt; void</code></li></ul><p>This matcher checks, if provided type is <code>undefined</code>.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expectTypeOf</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#CB7676;">undefined</span><span style="color:#666666;">).</span><span style="color:#80A665;">toBeUndefined</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">&lt;</span><span style="color:#CB7676;">undefined</span><span style="color:#666666;">&gt;().</span><span style="color:#80A665;">toBeUndefined</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#CB7676;">null</span><span style="color:#666666;">).</span><span style="color:#BD976A;">not</span><span style="color:#666666;">.</span><span style="color:#80A665;">toBeUndefined</span><span style="color:#666666;">()</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expectTypeOf</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#AB5959;">undefined</span><span style="color:#999999;">).</span><span style="color:#59873A;">toBeUndefined</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">&lt;</span><span style="color:#AB5959;">undefined</span><span style="color:#999999;">&gt;().</span><span style="color:#59873A;">toBeUndefined</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#AB5959;">null</span><span style="color:#999999;">).</span><span style="color:#B07D48;">not</span><span style="color:#999999;">.</span><span style="color:#59873A;">toBeUndefined</span><span style="color:#999999;">()</span></span></code></pre></div><h2 id="tobenullable" tabindex="-1">toBeNullable <a class="header-anchor" href="#tobenullable" aria-label="Permalink to &quot;toBeNullable&quot;">​</a></h2><ul><li><strong>Type:</strong> <code>() =&gt; void</code></li></ul><p>This matcher checks, if you can use <code>null</code> or <code>undefined</code> with provided type.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expectTypeOf</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD976A;">expectTypeOf</span><span style="color:#666666;">&lt;</span><span style="color:#4C9A91;">1</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">|</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">undefined</span><span style="color:#666666;">&gt;().</span><span style="color:#80A665;">toBeNullable</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#BD976A;">expectTypeOf</span><span style="color:#666666;">&lt;</span><span style="color:#4C9A91;">1</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">|</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">null</span><span style="color:#666666;">&gt;().</span><span style="color:#80A665;">toBeNullable</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#BD976A;">expectTypeOf</span><span style="color:#666666;">&lt;</span><span style="color:#4C9A91;">1</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">|</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">undefined</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">|</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">null</span><span style="color:#666666;">&gt;().</span><span style="color:#80A665;">toBeNullable</span><span style="color:#666666;">()</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expectTypeOf</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B07D48;">expectTypeOf</span><span style="color:#999999;">&lt;</span><span style="color:#2F798A;">1</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">|</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">undefined</span><span style="color:#999999;">&gt;().</span><span style="color:#59873A;">toBeNullable</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#B07D48;">expectTypeOf</span><span style="color:#999999;">&lt;</span><span style="color:#2F798A;">1</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">|</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">null</span><span style="color:#999999;">&gt;().</span><span style="color:#59873A;">toBeNullable</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#B07D48;">expectTypeOf</span><span style="color:#999999;">&lt;</span><span style="color:#2F798A;">1</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">|</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">undefined</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">|</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">null</span><span style="color:#999999;">&gt;().</span><span style="color:#59873A;">toBeNullable</span><span style="color:#999999;">()</span></span></code></pre></div><h2 id="tobecallablewith" tabindex="-1">toBeCallableWith <a class="header-anchor" href="#tobecallablewith" aria-label="Permalink to &quot;toBeCallableWith&quot;">​</a></h2><ul><li><strong>Type:</strong> <code>() =&gt; void</code></li></ul><p>This matcher ensures you can call provided function with a set of parameters.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expectTypeOf</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">type</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">NoParam</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">void</span></span>
<span class="line"><span style="color:#CB7676;">type</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">HasParam</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">s</span><span style="color:#666666;">: </span><span style="color:#5DA994;">string</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">void</span></span>
<span class="line"></span>
<span class="line"><span style="color:#5DA994;">expectTypeOf</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">NoParam</span><span style="color:#666666;">&gt;()</span><span style="color:#DBD7CAEE;">.</span><span style="color:#5DA994;">toBeCallableWith</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#5DA994;">expectTypeOf</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">HasParam</span><span style="color:#666666;">&gt;()</span><span style="color:#DBD7CAEE;">.</span><span style="color:#5DA994;">toBeCallableWith</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">some string</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expectTypeOf</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">type</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">NoParam</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">void</span></span>
<span class="line"><span style="color:#AB5959;">type</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">HasParam</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">s</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">string</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">void</span></span>
<span class="line"></span>
<span class="line"><span style="color:#2E8F82;">expectTypeOf</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">NoParam</span><span style="color:#999999;">&gt;()</span><span style="color:#393A34;">.</span><span style="color:#2E8F82;">toBeCallableWith</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#2E8F82;">expectTypeOf</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">HasParam</span><span style="color:#999999;">&gt;()</span><span style="color:#393A34;">.</span><span style="color:#2E8F82;">toBeCallableWith</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">some string</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>If used on a non-function type, it will return <code>never</code>, so you won&#39;t be able to chain it with other matchers.</p></div><h2 id="tobeconstructiblewith" tabindex="-1">toBeConstructibleWith <a class="header-anchor" href="#tobeconstructiblewith" aria-label="Permalink to &quot;toBeConstructibleWith&quot;">​</a></h2><ul><li><strong>Type:</strong> <code>() =&gt; void</code></li></ul><p>This matcher ensures you can create a new instance with a set of constructor parameters.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expectTypeOf</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#BD976A;">Date</span><span style="color:#666666;">).</span><span style="color:#80A665;">toBeConstructibleWith</span><span style="color:#666666;">(</span><span style="color:#CB7676;">new</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">Date</span><span style="color:#666666;">())</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#BD976A;">Date</span><span style="color:#666666;">).</span><span style="color:#80A665;">toBeConstructibleWith</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">01-01-2000</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expectTypeOf</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#B07D48;">Date</span><span style="color:#999999;">).</span><span style="color:#59873A;">toBeConstructibleWith</span><span style="color:#999999;">(</span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#59873A;">Date</span><span style="color:#999999;">())</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#B07D48;">Date</span><span style="color:#999999;">).</span><span style="color:#59873A;">toBeConstructibleWith</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">01-01-2000</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>If used on a non-function type, it will return <code>never</code>, so you won&#39;t be able to chain it with other matchers.</p></div><h2 id="tohaveproperty" tabindex="-1">toHaveProperty <a class="header-anchor" href="#tohaveproperty" aria-label="Permalink to &quot;toHaveProperty&quot;">​</a></h2><ul><li><strong>Type:</strong> <code>&lt;K extends keyof T&gt;(property: K) =&gt; ExpectTypeOf&lt;T[K&gt;</code></li></ul><p>This matcher checks if a property exists on the provided object. If it exists, it also returns the same set of matchers for the type of this property, so you can chain assertions one after another.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">expectTypeOf</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">vitest</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">obj</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#666666;">{ </span><span style="color:#B8A965;">a</span><span style="color:#666666;">: </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">, </span><span style="color:#B8A965;">b</span><span style="color:#666666;">: </span><span style="color:#C98A7D99;">&#39;&#39;</span><span style="color:#666666;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#BD976A;">obj</span><span style="color:#666666;">).</span><span style="color:#80A665;">toHaveProperty</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">a</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#BD976A;">obj</span><span style="color:#666666;">).</span><span style="color:#BD976A;">not</span><span style="color:#666666;">.</span><span style="color:#80A665;">toHaveProperty</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">c</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#BD976A;">obj</span><span style="color:#666666;">).</span><span style="color:#80A665;">toHaveProperty</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">a</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">).</span><span style="color:#80A665;">toBeNumber</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#BD976A;">obj</span><span style="color:#666666;">).</span><span style="color:#80A665;">toHaveProperty</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">b</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">).</span><span style="color:#80A665;">toBeString</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#80A665;">expectTypeOf</span><span style="color:#666666;">(</span><span style="color:#BD976A;">obj</span><span style="color:#666666;">).</span><span style="color:#80A665;">toHaveProperty</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">a</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">).</span><span style="color:#BD976A;">not</span><span style="color:#666666;">.</span><span style="color:#80A665;">toBeString</span><span style="color:#666666;">()</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">expectTypeOf</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">vitest</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">obj</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#999999;">{ </span><span style="color:#998418;">a</span><span style="color:#999999;">: </span><span style="color:#2F798A;">1</span><span style="color:#999999;">, </span><span style="color:#998418;">b</span><span style="color:#999999;">: </span><span style="color:#B5695999;">&#39;&#39;</span><span style="color:#999999;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#B07D48;">obj</span><span style="color:#999999;">).</span><span style="color:#59873A;">toHaveProperty</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">a</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#B07D48;">obj</span><span style="color:#999999;">).</span><span style="color:#B07D48;">not</span><span style="color:#999999;">.</span><span style="color:#59873A;">toHaveProperty</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">c</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#B07D48;">obj</span><span style="color:#999999;">).</span><span style="color:#59873A;">toHaveProperty</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">a</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">).</span><span style="color:#59873A;">toBeNumber</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#B07D48;">obj</span><span style="color:#999999;">).</span><span style="color:#59873A;">toHaveProperty</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">b</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">).</span><span style="color:#59873A;">toBeString</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#59873A;">expectTypeOf</span><span style="color:#999999;">(</span><span style="color:#B07D48;">obj</span><span style="color:#999999;">).</span><span style="color:#59873A;">toHaveProperty</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">a</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">).</span><span style="color:#B07D48;">not</span><span style="color:#999999;">.</span><span style="color:#59873A;">toBeString</span><span style="color:#999999;">()</span></span></code></pre></div>`,135),e=[o];function t(c,r,y,i,A,D){return a(),n("div",null,e)}const E=s(l,[["render",t]]);export{d as __pageData,E as default};
